From ec2f39eebd444dfcc6bd6c0c75cd8d404dacf4c7 Mon Sep 17 00:00:00 2001
Date: Wed, 6 Aug 2025 13:57:40 +0530
Subject: [PATCH] [PATCH] Fixed memory leak when entering StreamImage multiple
 times.

---
 magick/stream.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/magick/stream.c b/magick/stream.c
index a44b550..ea6ddd9 100644
--- a/magick/stream.c
+++ b/magick/stream.c
@@ -1275,7 +1275,8 @@ MagickExport Image *StreamImage(const ImageInfo *image_info,
   assert(exception != (ExceptionInfo *) NULL);
   read_info=CloneImageInfo(image_info);
   stream_info->image_info=image_info;
-  stream_info->quantum_info=AcquireQuantumInfo(image_info,(Image *) NULL);
+  if (stream_info->quantum_info == (QuantumInfo *) NULL)
+    stream_info->quantum_info=AcquireQuantumInfo(image_info,(Image *) NULL);
   if (stream_info->quantum_info == (QuantumInfo *) NULL)
     {
       read_info=DestroyImageInfo(read_info);
-- 
2.43.0

From c24c24111f04f90e7d4b25a97a9d61e61a4d59ac Mon Sep 17 00:00:00 2001
Date: Wed, 6 Aug 2025 15:34:58 +0530
Subject: [PATCH] root-sec-rls added for imagemagick

---
 ROOT-SECURITY-RELEASE.md | 83 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 83 insertions(+)
 create mode 100644 ROOT-SECURITY-RELEASE.md

diff --git a/ROOT-SECURITY-RELEASE.md b/ROOT-SECURITY-RELEASE.md
new file mode 100644
index 0000000..50b160a
--- /dev/null
+++ b/ROOT-SECURITY-RELEASE.md
@@ -0,0 +1,83 @@
+# Why You Cannot Fix `ImageMagick` CVEs via Code Patching in Containers
+
+## Overview: What Is the Issue with `ImageMagick`?
+
+ImageMagick is a widely-used software suite for image manipulation, available as a system package in many Linux distributions including Debian. While powerful, its extensive support for various image formats and delegate operations has led to numerous CVE reports, some of which are only applicable in very narrow configurations.
+
+In container environments, security scanners often flag CVEs based on metadata and not actual runtime configurations. In the case of ImageMagick, certain vulnerabilities are only exploitable when optional, insecure features (like `--enable-pipes`) are manually enabled ‚Äî which is not the case in default Debian configurations.
+
+---
+
+## Why Vulnerabilities in `ImageMagick` Are Often Not Fixable or Relevant in Debian Containers
+
+Security scanners (Trivy, Grype, Snyk, etc.) may report vulnerabilities based on:
+
+- Static package versions regardless of configuration
+- Broad CVE descriptions that assume worst-case compilation options
+- Ignorance of whether risky features (e.g., pipes, delegates) are enabled by default
+
+This can lead to **false positives** when:
+
+- The CVE only impacts setups with **manually enabled insecure options**
+- The affected feature is **disabled by default** in Debian packages
+- Upstream or distribution maintainers explicitly classify the CVE as **not impactful**
+
+Attempting to patch ImageMagick at the container level is usually a bad idea:
+
+- Risk of breaking shared library compatibility (`libMagickCore`, `libMagickWand`, etc.)
+- Increased image size and complexity from manual builds
+- No actual security gain when the exploit path is not active
+
+---
+
+# ‚ö†Ô∏è CVE Breakdown
+
+Below is a known `ImageMagick` CVE that is flagged by scanners but is **not exploitable in Debian-based containers** using the default configuration.
+
+---
+
+## üìå CVE-2023-34152 ‚Äì RCE via OpenBlob with `--enable-pipes`
+
+- **Component:** `OpenBlob` delegate command construction
+- **Issue:** If ImageMagick is built with `--enable-pipes`, an attacker may inject shell commands into filenames or parameters processed by `OpenBlob`, leading to remote code execution (RCE)
+- **Impact:** RCE via crafted input, but only when `--enable-pipes` is explicitly enabled at build time
+- **Upstream Status:** ‚ùó Possibly **disputed** or will be **rejected**  
+  ‚Üí [ImageMagick GitHub Issue #6339](https://github.com/ImageMagick/ImageMagick/issues/6339)
+
+### Vulnerable Versions (Debian)
+| Release   | Version                       | Status          |
+|-----------|-------------------------------|------------------|
+| bullseye  | 8:6.9.11.60+dfsg-1.3+deb11u4  | ‚ùå False positive |
+| bookworm  | 8:6.9.11.60+dfsg-1.6+deb12u3  | ‚ùå False positive |
+| trixie/sid| 8:7.x                         | ‚ùå False positive |
+
+### Why You Can't Fix This
+
+- The vulnerable behavior only exists when ImageMagick is compiled with `--enable-pipes`
+- Debian **does not enable pipes by default**, making this CVE non-exploitable out of the box
+- Fresh Debian installations (e.g., Bullseye, Bookworm) have pipes **disabled by default**
+- Debian security team marks this as **"unimportant"** in their tracker
+- Upstream discussion notes that **pipes are already a security risk**, and users must manually opt-in
+- Fixing this would require patching a feature that isn‚Äôt even active ‚Äî unnecessary and misleading
+
+**‚úÖ Recommendation:**  
+Treat this CVE as a **false positive** in container audits. Do not attempt to patch or rebuild ImageMagick unless you‚Äôve explicitly enabled pipes ‚Äî which you should not do in production containers.
+
+---
+
+## Summary
+
+- CVE-2023-34152 requires `--enable-pipes`, which is **not enabled** in Debian
+- Debian maintainers consider this CVE **not relevant** for their packages
+- Containers using stock Debian images are **not vulnerable**
+- No patching needed or meaningful in default environments
+
+**üìå Best Practice:** Acknowledge this CVE in compliance reports as **non-impactful** in Debian containers, and avoid unnecessary mitigation steps.
+
+---
+
+## References
+
+- [ImageMagick GitHub Issue #6339](https://github.com/ImageMagick/ImageMagick/issues/6339)
+- [Debian Security Tracker ‚Äì CVE-2023-34152](https://security-tracker.debian.org/tracker/CVE-2023-34152)
+- [NVD ‚Äì CVE-2023-34152](https://nvd.nist.gov/vuln/detail/CVE-2023-34152)
-- 
2.43.0

diff --git a/magick/image.c b/magick/image.c
index 1fc3617..ee96ac6 100644
--- a/magick/image.c
+++ b/magick/image.c
@@ -1671,7 +1671,6 @@ MagickExport size_t InterpretImageFilename(const ImageInfo *image_info,
     *p;
 
   ssize_t
-    field_width,
     offset;
 
   canonical=MagickFalse;
@@ -1685,21 +1684,22 @@ MagickExport size_t InterpretImageFilename(const ImageInfo *image_info,
         p=q+1;
         continue;
       }
-    field_width=0;
-    if (*q == '0')
-      field_width=(ssize_t) strtol(q,&q,10);
     switch (*q)
     {
       case 'd':
       case 'o':
       case 'x':
       {
+        ssize_t
+          count;
         q++;
         c=(*q);
         *q='\0';
-        (void) FormatLocaleString(filename+(p-format-offset),(size_t)
+        count=FormatLocaleString(filename+(p-format-offset),(size_t)
           (MaxTextExtent-(p-format-offset)),p,value);
-        offset+=(4-field_width);
+        if ((count <= 0) || (count > (MagickPathExtent-(p-format-offset))))
+          return(0);
+        offset+=(ssize_t) ((q-p)-count);
         *q=c;
         (void) ConcatenateMagickString(filename,q,MaxTextExtent);
         canonical=MagickTrue;
