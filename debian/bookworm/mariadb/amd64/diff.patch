From a73ca25ccefa4d0ebae20496a4adfd609ad3779f Mon Sep 17 00:00:00 2001
Date: Sun, 25 May 2025 20:19:15 +0530
Subject: [PATCH] fix for CVE-2025-30722 Backported all the changes from
 10.11.12 of mysqldump file to 10.11.11

---
 client/mysql_upgrade.c                   | 14 +++--
 client/mysqldump.c                       | 15 ++++--
 cmake/os/Windows.cmake                   | 19 +++++++
 cmake/pcre.cmake                         | 12 ++++-
 mysql-test/CMakeLists.txt                |  2 +-
 mysql-test/main/func_regexp_pcre.result  | 28 +---------
 mysql-test/main/func_regexp_pcre.test    |  2 +-
 mysql-test/main/mysql_upgrade.result     | 23 +++++----
 mysql-test/main/mysql_upgrade.test       | 29 ++++++++---
 mysql-test/main/mysqldump-system.result  |  6 +--
 mysql-test/main/mysqldump.result         | 65 ++++++++++++++++++------
 mysql-test/main/mysqldump.test           |  9 ++++
 storage/innobase/handler/ha_innodb.cc    |  7 ++-
 16 files changed, 154 insertions(+), 94 deletions(-)

Index: mariadb-server/client/mysql_upgrade.c
===================================================================
--- mariadb-server.orig/client/mysql_upgrade.c
+++ mariadb-server/client/mysql_upgrade.c
@@ -855,8 +855,7 @@ static int upgrade_already_done(int sile
   s= strchr(version, '.');
   s= strchr(s + 1, '.');
 
-  if (strncmp(upgrade_from_version, version,
-              (size_t)(s - version + 1)))
+  if (strncmp(upgrade_from_version, version, (size_t)(s - version + 1)))
   {
     if (calc_server_version(upgrade_from_version) <= MYSQL_VERSION_ID)
     {
@@ -870,9 +869,14 @@ static int upgrade_already_done(int sile
   }
   if (!silent)
   {
-    verbose("This installation of MariaDB is already upgraded to %s.\n"
-            "There is no need to run mysql_upgrade again for %s.",
-            upgrade_from_version, version);
+    if (strcmp(upgrade_from_version, version))
+      verbose("This installation of MariaDB is already upgraded to %s.\n"
+              "There is no need to run mysql_upgrade again for %s, because "
+              "they're both %.*s.",
+              upgrade_from_version, version, (int)(s - version), version);
+    else
+      verbose("This installation of MariaDB is already upgraded to %s.\n"
+              "There is no need to run mysql_upgrade again.", version);
     if (!opt_check_upgrade)
       verbose("You can use --force if you still want to run mysql_upgrade");
   }
Index: mariadb-server/client/mysqldump.c
===================================================================
--- mariadb-server.orig/client/mysqldump.c
+++ mariadb-server/client/mysqldump.c
@@ -2158,7 +2158,7 @@ static char *quote_for_equal(const char
       *to++='\\';
     }
     if (*name == '\'')
-      *to++= '\\';
+      *to++= '\'';
     *to++= *name++;
   }
   to[0]= '\'';
@@ -3713,7 +3713,7 @@ static void dump_trigger_old(FILE *sql_f
 
   fprintf(sql_file,
           "DELIMITER ;;\n"
-          "/*!50003 SET SESSION SQL_MODE=\"%s\" */;;\n"
+          "/*!50003 SET SESSION SQL_MODE='%s' */;;\n"
           "/*!50003 CREATE */ ",
           (*show_trigger_row)[6]);
 
@@ -4730,17 +4730,19 @@ static int dump_all_users_roles_and_gran
     return 1;
   while ((row= mysql_fetch_row(tableres)))
   {
+    char buf[200];
     if (opt_replace_into)
       /* Protection against removing the current import user */
       /* MySQL-8.0 export capability */
       fprintf(md_result_file,
         "DELIMITER |\n"
-        "/*M!100101 IF current_user()=\"%s\" THEN\n"
+        "/*M!100101 IF current_user()=%s THEN\n"
         "  SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30001,"
         " MESSAGE_TEXT=\"Don't remove current user %s'\";\n"
         "END IF */|\n"
         "DELIMITER ;\n"
-        "/*!50701 DROP USER IF EXISTS %s */;\n", row[0], row[0], row[0]);
+        "/*!50701 DROP USER IF EXISTS %s */;\n",
+        quote_for_equal(row[0],buf), row[0], row[0]);
     if (dump_create_user(row[0]))
       result= 1;
     /* if roles exist, defer dumping grants until after roles created */
@@ -6858,6 +6860,7 @@ static my_bool get_view_structure(char *
   char       *result_table, *opt_quoted_table;
   char       table_buff[NAME_LEN*2+3];
   char       table_buff2[NAME_LEN*2+3];
+  char       temp_buff[NAME_LEN*2 + 3], temp_buff2[NAME_LEN*2 + 3];
   char       query[QUERY_LENGTH];
   FILE       *sql_file= md_result_file;
   DBUG_ENTER("get_view_structure");
@@ -6918,7 +6921,9 @@ static my_bool get_view_structure(char *
               "SELECT CHECK_OPTION, DEFINER, SECURITY_TYPE, "
               "       CHARACTER_SET_CLIENT, COLLATION_CONNECTION "
               "FROM information_schema.views "
-              "WHERE table_name=\"%s\" AND table_schema=\"%s\"", table, db);
+              "WHERE table_name=%s AND table_schema=%s",
+              quote_for_equal(table, temp_buff2),
+              quote_for_equal(db, temp_buff));
 
   if (mysql_query(mysql, query))
   {
Index: mariadb-server/cmake/os/Windows.cmake
===================================================================
--- mariadb-server.orig/cmake/os/Windows.cmake
+++ mariadb-server/cmake/os/Windows.cmake
@@ -129,6 +129,25 @@ IF(MSVC)
     MESSAGE(FATAL_ERROR "Invalid value ${MSVC_CRT_TYPE} for MSVC_CRT_TYPE, choose one of /MT,/MTd,/MD,/MDd ")
   ENDIF()
 
+  # CMake version 3.15 and later uses CMAKE_MSVC_RUNTIME_LIBRARY
+  # variable for our MSVC_CRT_TYPE.
+  # Set CMAKE_MSVC_RUNTIME_LIBRARY and pass to external projects
+  # it is important to keep the same CRT type when linking
+  #
+  # Translation rules MSVC_CRT_TYPE -> CMAKE_MSVC_RUNTIME_LIBRARY
+  # /MT  -> MultiThreaded
+  # /MTd -> MultiThreadedDebug
+  # /MD  -> MultiThreadedDLL
+  # /MDd -> MultiThreadedDebugDLL
+
+  SET(CMAKE_MSVC_RUNTIME_LIBRARY MultiThreaded)
+  IF(MSVC_CRT_TYPE MATCHES "d$")
+    STRING(APPEND CMAKE_MSVC_RUNTIME_LIBRARY Debug)
+  ENDIF()
+  IF(MSVC_CRT_TYPE MATCHES "D")
+    STRING(APPEND CMAKE_MSVC_RUNTIME_LIBRARY DLL)
+  ENDIF()
+
   IF(MSVC_CRT_TYPE MATCHES "/MD")
    # Dynamic runtime (DLLs), need to install CRT libraries.
    SET(CMAKE_INSTALL_SYSTEM_RUNTIME_COMPONENT VCCRT)
Index: mariadb-server/cmake/pcre.cmake
===================================================================
--- mariadb-server.orig/cmake/pcre.cmake
+++ mariadb-server/cmake/pcre.cmake
@@ -54,11 +54,18 @@ MACRO(BUNDLE_PCRE2)
     ENDIF()
   ENDFOREACH()
 
+  IF(CMAKE_MSVC_RUNTIME_LIBRARY)
+    SET(CMAKE_MSVC_RUNTIME_LIBRARY_ARG
+      "-DCMAKE_MSVC_RUNTIME_LIBRARY=${CMAKE_MSVC_RUNTIME_LIBRARY}")
+  ELSE()
+    SET(CMAKE_MSVC_RUNTIME_LIBRARY_ARG)
+  ENDIF()
+
   ExternalProject_Add(
     pcre2
     PREFIX   "${dir}"
-    URL "https://github.com/PCRE2Project/pcre2/releases/download/pcre2-10.44/pcre2-10.44.zip"
-    URL_MD5 dfab8313154b3377a6959c3b6377841e
+    URL "https://github.com/PCRE2Project/pcre2/releases/download/pcre2-10.45/pcre2-10.45.zip"
+    URL_MD5 873da56c6469ec207ca5c5ae9688b83a
     INSTALL_COMMAND ""
     CMAKE_ARGS
       "-DCMAKE_WARN_DEPRECATED=FALSE"
@@ -72,6 +79,7 @@ MACRO(BUNDLE_PCRE2)
       "-DCMAKE_C_FLAGS_RELEASE=${pcre2_flags_RELEASE}"
       "-DCMAKE_C_FLAGS_MINSIZEREL=${pcre2_flags_MINSIZEREL}"
       "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}"
+      ${CMAKE_MSVC_RUNTIME_LIBRARY_ARG}
       ${stdlibs}
       ${byproducts}
   )
Index: mariadb-server/mysql-test/CMakeLists.txt
===================================================================
--- mariadb-server.orig/mysql-test/CMakeLists.txt
+++ mariadb-server/mysql-test/CMakeLists.txt
@@ -14,7 +14,7 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1335 USA
 
-INSTALL_MYSQL_TEST("." ".")
+INSTALL_MYSQL_TEST("." "")
 
 IF(NOT ${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
   # Enable running mtr from build directory
Index: mariadb-server/mysql-test/main/func_regexp_pcre.result
===================================================================
--- mariadb-server.orig/mysql-test/main/func_regexp_pcre.result
+++ mariadb-server/mysql-test/main/func_regexp_pcre.result
@@ -60,7 +60,7 @@ INSERT INTO t1 VALUES ('1'),('௨');
 INSERT INTO t2 VALUES ('\\p{Cyrillic}'),('\\p{Greek}'),('\\p{Latin}');
 INSERT INTO t2 VALUES ('\\p{Han}'),('\\p{Hangul}');
 INSERT INTO t2 VALUES ('\\p{Sinhala}'), ('\\p{Tamil}');
-INSERT INTO t2 VALUES ('\\p{L}'),('\\p{Ll}'),('\\p{Lu}'),('\\p{L&}');
+INSERT INTO t2 VALUES ('\\p{L}'), /* buggy before v10.45 ('\\p{Ll}'),('\\p{Lu}'),*/ ('\\p{L&}');
 INSERT INTO t2 VALUES ('[[:alpha:]]'),('[[:digit:]]');
 SELECT class, ch, ch RLIKE class FROM t1, t2 ORDER BY class, BINARY ch;
 class	ch	ch RLIKE class
@@ -168,32 +168,6 @@ class	ch	ch RLIKE class
 \p{Latin}	ප	0
 \p{Latin}	㐗	0
 \p{Latin}	갷	0
-\p{Ll}	1	0
-\p{Ll}	A	0
-\p{Ll}	a	1
-\p{Ll}	À	0
-\p{Ll}	à	1
-\p{Ll}	Σ	0
-\p{Ll}	σ	1
-\p{Ll}	Я	0
-\p{Ll}	я	1
-\p{Ll}	௨	0
-\p{Ll}	ප	0
-\p{Ll}	㐗	0
-\p{Ll}	갷	0
-\p{Lu}	1	0
-\p{Lu}	A	1
-\p{Lu}	a	0
-\p{Lu}	À	1
-\p{Lu}	à	0
-\p{Lu}	Σ	1
-\p{Lu}	σ	0
-\p{Lu}	Я	1
-\p{Lu}	я	0
-\p{Lu}	௨	0
-\p{Lu}	ප	0
-\p{Lu}	㐗	0
-\p{Lu}	갷	0
 \p{L}	1	0
 \p{L}	A	1
 \p{L}	a	1
Index: mariadb-server/mysql-test/main/func_regexp_pcre.test
===================================================================
--- mariadb-server.orig/mysql-test/main/func_regexp_pcre.test
+++ mariadb-server/mysql-test/main/func_regexp_pcre.test
@@ -41,7 +41,7 @@ INSERT INTO t1 VALUES ('1'),('௨');
 INSERT INTO t2 VALUES ('\\p{Cyrillic}'),('\\p{Greek}'),('\\p{Latin}');
 INSERT INTO t2 VALUES ('\\p{Han}'),('\\p{Hangul}');
 INSERT INTO t2 VALUES ('\\p{Sinhala}'), ('\\p{Tamil}');
-INSERT INTO t2 VALUES ('\\p{L}'),('\\p{Ll}'),('\\p{Lu}'),('\\p{L&}');
+INSERT INTO t2 VALUES ('\\p{L}'), /* buggy before v10.45 ('\\p{Ll}'),('\\p{Lu}'),*/ ('\\p{L&}');
 INSERT INTO t2 VALUES ('[[:alpha:]]'),('[[:digit:]]');
 SELECT class, ch, ch RLIKE class FROM t1, t2 ORDER BY class, BINARY ch;
 DROP TABLE t1, t2;
Index: mariadb-server/mysql-test/main/mysql_upgrade.result
===================================================================
--- mariadb-server.orig/mysql-test/main/mysql_upgrade.result
+++ mariadb-server/mysql-test/main/mysql_upgrade.result
@@ -151,7 +151,8 @@ Phase 7/8: uninstalling plugins
 Phase 8/8: Running 'FLUSH PRIVILEGES'
 OK
 Run it again - should say already completed
-This installation of MariaDB is already upgraded to VERSION.There is no need to run mysql_upgrade again for VERSION.
+This installation of MariaDB is already upgraded to X.Y.Z-MariaDB.
+There is no need to run mysql_upgrade again.
 You can use --force if you still want to run mysql_upgrade
 Force should run it regardless of whether it has been run before
 Phase 1/8: Checking and upgrading mysql database
@@ -1911,11 +1912,11 @@ FLUSH PRIVILEGES;
 #
 # MDEV-27279: mariadb_upgrade add --check-if-upgrade-is-needed
 #
-This installation of MariaDB is already upgraded to MariaDB .
-There is no need to run mysql_upgrade again for MariaDB .
+This installation of MariaDB is already upgraded to X.Y.Z-MariaDB.
+There is no need to run mysql_upgrade again.
 Looking for 'mariadb' as: mariadb
-This installation of MariaDB is already upgraded to MariaDB .
-There is no need to run mysql_upgrade again for MariaDB .
+This installation of MariaDB is already upgraded to X.Y.Z-MariaDB.
+There is no need to run mysql_upgrade again.
 #
 # MDEV-27279: mariadb_upgrade check-if-upgrade absence is do it
 #
@@ -1925,17 +1926,17 @@ Empty or non existent ...mysql_upgrade_i
 # MDEV-27279: mariadb_upgrade check-if-upgrade with minor version change
 #
 Looking for 'mariadb' as: mariadb
-This installation of MariaDB is already upgraded to MariaDB .
-There is no need to run mysql_upgrade again for MariaDB .
-This installation of MariaDB is already upgraded to MariaDB .
-There is no need to run mysql_upgrade again for MariaDB .
+This installation of MariaDB is already upgraded to X.Y.0-MariaDB.
+There is no need to run mysql_upgrade again for X.Y.Z-MariaDB, because they're both X.Y.
+This installation of MariaDB is already upgraded to X.Y.0-MariaDB.
+There is no need to run mysql_upgrade again for X.Y.Z-MariaDB, because they're both X.Y.
 You can use --force if you still want to run mysql_upgrade
 #
 # MDEV-27279: mariadb_upgrade check-if-upgrade with major version change
 #
-Major version upgrade detected from MariaDB  to MariaDB . Check required!
+Major version upgrade detected from X.0.99 to X.Y.Z-MariaDB. Check required!
 Looking for 'mysql' as: mysql
-Major version upgrade detected from MariaDB  to MariaDB . Check required!
+Major version upgrade detected from X.0.99 to X.Y.Z-MariaDB. Check required!
 drop table mysql.global_priv;
 rename table mysql.global_priv_bak to mysql.global_priv;
 # End of 10.2 tests
Index: mariadb-server/mysql-test/main/mysql_upgrade.test
===================================================================
--- mariadb-server.orig/mysql-test/main/mysql_upgrade.test
+++ mariadb-server/mysql-test/main/mysql_upgrade.test
@@ -4,6 +4,14 @@
 -- source include/have_partition.inc
 -- source include/no_valgrind_without_big.inc
 
+let majorminor=`select substring_index(version(), '.', 2)`;
+# for major upgrade test, see below
+let major=`select substring_index(version(), '.', 1) - (version() like '%.0.%')`;
+
+let majorminor=`select substring_index(version(), '.', 2)`;
+# for major upgrade test, see below
+let major=`select substring_index(version(), '.', 1) - (version() like '%.0.%')`;
+
 set sql_mode="";
 
 call mtr.add_suppression("Incorrect definition of table mysql.column_stats:.*");
@@ -19,7 +27,7 @@ let $MYSQLD_DATADIR= `select @@datadir`;
 file_exists $MYSQLD_DATADIR/mysql_upgrade_info;
 
 --echo Run it again - should say already completed
---replace_regex /upgraded to [^\n].*/upgraded to VERSION./ /again for [^\n]*/again for VERSION./
+--replace_result $MYSQL_SERVER_VERSION X.Y.Z-MariaDB
 --exec $MYSQL_UPGRADE 2>&1
 
 # It should have created a file in the MySQL Servers datadir
@@ -289,10 +297,11 @@ FLUSH PRIVILEGES;
 
 --error 1
 --exec $MYSQL_UPGRADE --check-if-upgrade-is-needed --silent
---replace_regex /\d\d\.\d*\.\d*[^ .\n]*/MariaDB /
+--replace_result $MYSQL_SERVER_VERSION X.Y.Z-MariaDB
 --error 1
 --exec $MYSQL_UPGRADE --check-if-upgrade-is-needed
---replace_regex /\d\d\.\d*\.\d*[^ .\n]*/MariaDB / /'mariadb.* as:[^\n]*/'mariadb' as: mariadb/
+--replace_result $MYSQL_SERVER_VERSION X.Y.Z-MariaDB
+--replace_regex /'mariadb.* as:[^\n]*/'mariadb' as: mariadb/
 --error 1
 --exec $MYSQL_UPGRADE --check-if-upgrade-is-needed --verbose
 
@@ -320,16 +329,18 @@ perl;
   my $file= $ENV{'DATADIR'} or die "MYSQLD_DATADIR not set";
   $ver =~ s/^(\d*)\.(\d*).(\d*)(.*)/$1.$2.0$4/;
   open(FILE, ">$file/mysql_upgrade_info") or die "Failed to open $file";
+  binmode FILE;
   print FILE "$ver\n";
   close(FILE);
 EOF
 
 --error 1
 --exec $MYSQL_UPGRADE --check-if-upgrade-is-needed --silent
---replace_regex /\d\d\.\d*\.\d*[^ .\n]*/MariaDB / /'mariadb.* as:[^\n]*/'mariadb' as: mariadb/
+--replace_result $MYSQL_SERVER_VERSION X.Y.Z-MariaDB $majorminor X.Y
+--replace_regex /'mariadb.* as:[^\n]*/'mariadb' as: mariadb/
 --error 1
 --exec $MYSQL_UPGRADE --check-if-upgrade-is-needed --verbose
---replace_regex /\d\d\.\d*\.\d*[^ .\n]*/MariaDB /
+--replace_result $MYSQL_SERVER_VERSION X.Y.Z-MariaDB $majorminor X.Y
 --exec $MYSQL_UPGRADE
 --remove_file $MYSQLD_DATADIR/mysql_upgrade_info
 
@@ -344,16 +355,18 @@ let DATADIR= $MYSQLD_DATADIR;
 perl;
   my $ver= $ENV{'MYSQL_SERVER_VERSION'} or die "MYSQL_SERVER_VERSION not set";
   my $file= $ENV{'DATADIR'} or die "MYSQLD_DATADIR not set";
-  $ver =~ s/^(\d*)\.(\d*).(\d*)(.*)/$1.0.$3$4/;
+  $ver =~ s/^(\d*)\.(\d*).(\d*)(.*)/$1.0.99/;
   open(FILE, ">$file/mysql_upgrade_info") or die "Failed to open $file";
+  binmode FILE;
   print FILE "$ver\n";
   close(FILE);
 EOF
 
 --exec $MYSQL_UPGRADE --check-if-upgrade-is-needed --silent
---replace_regex /\d\d\.\d*\.\d*[^ .\n]*/MariaDB /
+--replace_result $MYSQL_SERVER_VERSION X.Y.Z-MariaDB $major X
 --exec $MYSQL_UPGRADE --check-if-upgrade-is-needed
---replace_regex /\d\d\.\d*\.\d*[^ .\n]*/MariaDB / /'mariadb.* as:[^\n]*/'mysql' as: mysql/
+--replace_result $MYSQL_SERVER_VERSION X.Y.Z-MariaDB $major X
+--replace_regex /'mariadb.* as:[^\n]*/'mysql' as: mysql/
 --exec $MYSQL_UPGRADE --check-if-upgrade-is-needed --verbose
 --remove_file $MYSQLD_DATADIR/mysql_upgrade_info
 drop table mysql.global_priv;
Index: mariadb-server/mysql-test/main/mysqldump-system.result
===================================================================
--- mariadb-server.orig/mysql-test/main/mysqldump-system.result
+++ mariadb-server/mysql-test/main/mysqldump-system.result
@@ -650,21 +650,21 @@ INSTALL PLUGIN test_plugin_server  SONAM
 /*M!100401 UNINSTALL PLUGIN IF EXIST cleartext_plugin_server */;
 INSTALL PLUGIN cleartext_plugin_server  SONAME 'AUTH_TEST_PLUGIN_LIB';
 DELIMITER |
-/*M!100101 IF current_user()="'mariadb.sys'@'localhost'" THEN
+/*M!100101 IF current_user()='''mariadb.sys''@''localhost''' THEN
   SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30001, MESSAGE_TEXT="Don't remove current user 'mariadb.sys'@'localhost''";
 END IF */|
 DELIMITER ;
 /*!50701 DROP USER IF EXISTS 'mariadb.sys'@'localhost' */;
 CREATE /*M!100103 OR REPLACE */ USER `mariadb.sys`@`localhost` PASSWORD EXPIRE;
 DELIMITER |
-/*M!100101 IF current_user()="'root'@'localhost'" THEN
+/*M!100101 IF current_user()='''root''@''localhost''' THEN
   SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30001, MESSAGE_TEXT="Don't remove current user 'root'@'localhost''";
 END IF */|
 DELIMITER ;
 /*!50701 DROP USER IF EXISTS 'root'@'localhost' */;
 CREATE /*M!100103 OR REPLACE */ USER `root`@`localhost`;
 DELIMITER |
-/*M!100101 IF current_user()="'foobar'@'%'" THEN
+/*M!100101 IF current_user()='''foobar''@''%''' THEN
   SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30001, MESSAGE_TEXT="Don't remove current user 'foobar'@'%''";
 END IF */|
 DELIMITER ;
Index: mariadb-server/mysql-test/main/mysqldump.result
===================================================================
--- mariadb-server.orig/mysql-test/main/mysqldump.result
+++ mariadb-server/mysql-test/main/mysqldump.result
@@ -6747,6 +6747,39 @@ CREATE TABLE `t1` (
 /*!40101 SET character_set_client = @saved_cs_client */;
 ERROR at line 9: Not allowed in the sandbox mode
 drop table t1;
+#
+# MDEV-36268 mariadb-dump used wrong quoting character
+#
+create table t1 (a int);
+create view `v'1"2` as select * from t1 with check option;
+/*M!999999\- enable the sandbox mode */ 
+/*!40101 SET @saved_cs_client     = @@character_set_client */;
+/*!40101 SET character_set_client = utf8mb4 */;
+CREATE TABLE `t1` (
+  `a` int(11) DEFAULT NULL
+) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;
+/*!40101 SET character_set_client = @saved_cs_client */;
+SET @saved_cs_client     = @@character_set_client;
+SET character_set_client = utf8mb4;
+/*!50001 CREATE VIEW `v'1"2` AS SELECT
+ 1 AS `a` */;
+SET character_set_client = @saved_cs_client;
+/*!50001 DROP VIEW IF EXISTS `v'1"2`*/;
+/*!50001 SET @saved_cs_client          = @@character_set_client */;
+/*!50001 SET @saved_cs_results         = @@character_set_results */;
+/*!50001 SET @saved_col_connection     = @@collation_connection */;
+/*!50001 SET character_set_client      = utf8mb3 */;
+/*!50001 SET character_set_results     = utf8mb3 */;
+/*!50001 SET collation_connection      = utf8mb3_general_ci */;
+/*!50001 CREATE ALGORITHM=UNDEFINED */
+/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
+/*!50001 VIEW `v'1"2` AS select `t1`.`a` AS `a` from `t1` */
+/*!50002 WITH CASCADED CHECK OPTION */;
+/*!50001 SET character_set_client      = @saved_cs_client */;
+/*!50001 SET character_set_results     = @saved_cs_results */;
+/*!50001 SET collation_connection      = @saved_col_connection */;
+drop view `v'1"2`;
+drop table t1;
 # End of 10.5 tests
 #
 # MDEV-16733 mysqldump --tab and --xml options are conflicting
Index: mariadb-server/mysql-test/main/mysqldump.test
===================================================================
--- mariadb-server.orig/mysql-test/main/mysqldump.test
+++ mariadb-server/mysql-test/main/mysqldump.test
@@ -3029,6 +3029,15 @@ EOF
 --remove_file $MYSQLTEST_VARDIR/tmp/mdev33727.sql
 drop table t1;
 
+--echo #
+--echo # MDEV-36268 mariadb-dump used wrong quoting character
+--echo #
+create table t1 (a int);
+create view `v'1"2` as select * from t1 with check option; # "'
+--exec $MYSQL_DUMP --compact test
+drop view `v'1"2`; # "'
+drop table t1;
+
 --echo # End of 10.5 tests
 
 --echo #
Index: mariadb-server/storage/innobase/handler/ha_innodb.cc
===================================================================
--- mariadb-server.orig/storage/innobase/handler/ha_innodb.cc
+++ mariadb-server/storage/innobase/handler/ha_innodb.cc
@@ -4620,10 +4620,9 @@ innobase_commit(
 		ut_ad("invalid state" == 0);
 		/* fall through */
 	case TRX_STATE_PREPARED:
-		ut_ad(commit_trx || trx->is_wsrep());
-		ut_ad(thd_test_options(thd, OPTION_NOT_AUTOCOMMIT
-				       | OPTION_BEGIN)
-		      || trx->is_wsrep());
+		ut_ad(commit_trx ||
+		      !thd_test_options(thd, OPTION_NOT_AUTOCOMMIT
+				       | OPTION_BEGIN));
 		/* fall through */
 	case TRX_STATE_ACTIVE:
 		/* Transaction is deregistered only in a commit or aFrom 1c9f64e54ffb109bb6cf6a189e863bfa54e46510 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marko=20M=C3=A4kel=C3=A4?= <marko.makela@mariadb.com>
Date: Wed, 16 Apr 2025 15:55:45 +0300
Subject: [PATCH] MDEV-36613 Incorrect undo logging for indexes on virtual
 columns

Starting with mysql/mysql-server@02f8eaa9988dadb73dd68630dd82393cfa19bfb8
and commit 2e814d4702d71a04388386a9f591d14a35980bfe the index ID of
indexes on virtual columns was being encoded insufficiently in
InnoDB undo log records.  Only the least significant 32 bits were
being written.  This could lead to some corruption of the affected
indexes on ROLLBACK, as well as to missed chances to remove some
history from such indexes when purging the history of committed
transactions that included DELETE or an UPDATE in the indexes.

dict_hdr_create(): In debug instrumented builds, initialize the
DICT_HDR_INDEX_ID close to the 32-bit barrier, instead of initializing
it to DICT_HDR_FIRST_ID (10).  This will allow the changed code to
be exercised while running ./mtr --suite=gcol,vcol.

trx_undo_log_v_idx(): Encode large index->id in a similar way as
mysql/mysql-server@e00328b4d068c7485ac2ffe27207ed1f462c718d
but using a different implementation.

trx_undo_read_v_idx_low(): Decode large index->id in a similar way
as mach_u64_read_much_compressed().

Reviewed by: Debarun Banerjee
---
 .../suite/gcol/r/innodb_virtual_basic.result  |  2 +
 .../suite/gcol/t/innodb_virtual_basic.test    | 37 ++++++++++++++++++-
 storage/innobase/trx/trx0rec.cc               | 26 ++++++++++---
 3 files changed, 58 insertions(+), 7 deletions(-)

diff --git a/mysql-test/suite/gcol/r/innodb_virtual_basic.result b/mysql-test/suite/gcol/r/innodb_virtual_basic.result
index 3823887186b06..35534d68e632a 100644
--- a/mysql-test/suite/gcol/r/innodb_virtual_basic.result
+++ b/mysql-test/suite/gcol/r/innodb_virtual_basic.result
@@ -86,6 +86,8 @@ delete from t where a =13;
 DROP INDEX idx1 ON t;
 DROP INDEX idx2 ON t;
 DROP TABLE t;
+# restart
+set default_storage_engine=innodb;
 /* Test large BLOB data */
 CREATE TABLE `t` (
 `a` BLOB,
diff --git a/mysql-test/suite/gcol/t/innodb_virtual_basic.test b/mysql-test/suite/gcol/t/innodb_virtual_basic.test
index b64daa2bcdb63..69f9f89ccee7f 100644
--- a/mysql-test/suite/gcol/t/innodb_virtual_basic.test
+++ b/mysql-test/suite/gcol/t/innodb_virtual_basic.test
@@ -1,6 +1,6 @@
 --source include/have_innodb.inc
 --source include/have_partition.inc
---source include/big_test.inc
+--source include/not_embedded.inc
 
 call mtr.add_suppression("\\[Warning\\] InnoDB: Compute virtual");
 
@@ -66,6 +66,41 @@ DROP INDEX idx1 ON t;
 DROP INDEX idx2 ON t;
 DROP TABLE t;
 
+let MYSQLD_DATADIR=`select @@datadir`;
+let PAGE_SIZE=`select @@innodb_page_size`;
+--source include/shutdown_mysqld.inc
+perl;
+do "$ENV{MTR_SUITE_DIR}/../innodb/include/crc32.pl";
+my $file = "$ENV{MYSQLD_DATADIR}/ibdata1";
+open(FILE, "+<$file") || die "Unable to open $file";
+binmode FILE;
+my $ps= $ENV{PAGE_SIZE};
+my $page;
+die "Unable to read $file" unless sysread(FILE, $page, $ps) == $ps;
+my $full_crc32 = unpack("N",substr($page,54,4)) & 0x10; # FIL_SPACE_FLAGS
+sysseek(FILE, 7*$ps, 0) || die "Unable to seek $file\n";
+die "Unable to read $file" unless sysread(FILE, $page, $ps) == $ps;
+substr($page,54,4)=pack("N",0xc001cafe); # 32 MSB of 64-bit DICT_HDR_INDEX_ID
+my $polynomial = 0x82f63b78; # CRC-32C
+if ($full_crc32)
+{
+    my $ck = mycrc32(substr($page, 0, $ps-4), 0, $polynomial);
+    substr($page, $ps-4, 4) = pack("N", $ck);
+}
+else
+{
+    my $ck= pack("N",mycrc32(substr($page, 4, 22), 0, $polynomial) ^
+		 mycrc32(substr($page, 38, $ps - 38 - 8), 0, $polynomial));
+    substr($page,0,4)=$ck;
+    substr($page,$ps-8,4)=$ck;
+}
+sysseek(FILE, 7*$ps, 0) || die "Unable to rewind $file\n";
+syswrite(FILE, $page, $ps)==$ps || die "Unable to write $file\n";
+close(FILE) || die "Unable to close $file";
+EOF
+--source include/start_mysqld.inc
+set default_storage_engine=innodb;
+
 /* Test large BLOB data */
 CREATE TABLE `t` (
   `a` BLOB,
diff --git a/storage/innobase/trx/trx0rec.cc b/storage/innobase/trx/trx0rec.cc
index 33a3962047fa7..d815f180abafa 100644
--- a/storage/innobase/trx/trx0rec.cc
+++ b/storage/innobase/trx/trx0rec.cc
@@ -148,7 +148,9 @@ trx_undo_log_v_idx(
 	ulint n_idx = 0;
 	for (const auto& v_index : vcol->v_indexes) {
 		n_idx++;
-		/* FIXME: index->id is 64 bits! */
+		if (uint32_t hi= uint32_t(v_index.index->id >> 32)) {
+			size += 1 + mach_get_compressed_size(hi);
+		}
 		size += mach_get_compressed_size(uint32_t(v_index.index->id));
 		size += mach_get_compressed_size(v_index.nth_field);
 	}
@@ -175,10 +177,14 @@ trx_undo_log_v_idx(
 	ptr += mach_write_compressed(ptr, n_idx);
 
 	for (const auto& v_index : vcol->v_indexes) {
-		ptr += mach_write_compressed(
-			/* FIXME: index->id is 64 bits! */
-			ptr, uint32_t(v_index.index->id));
-
+		/* This is compatible with
+		ptr += mach_u64_write_much_compressed(ptr, v_index.index-id)
+		(the added "if" statement is fixing an old regression). */
+		if (uint32_t hi= uint32_t(v_index.index->id >> 32)) {
+			*ptr++ = 0xff;
+			ptr += mach_write_compressed(ptr, hi);
+		}
+		ptr += mach_write_compressed(ptr, uint32_t(v_index.index->id));
 		ptr += mach_write_compressed(ptr, v_index.nth_field);
 	}
 
@@ -217,7 +223,15 @@ trx_undo_read_v_idx_low(
 	dict_index_t*	clust_index = dict_table_get_first_index(table);
 
 	for (ulint i = 0; i < num_idx; i++) {
-		index_id_t	id = mach_read_next_compressed(&ptr);
+		index_id_t	id = 0;
+		/* This is like mach_u64_read_much_compressed(),
+		but advancing ptr to the next field. */
+		if (*ptr == 0xff) {
+			ptr++;
+			id = mach_read_next_compressed(&ptr);
+			id <<= 32;
+		}
+		id |= mach_read_next_compressed(&ptr);
 		ulint		pos = mach_read_next_compressed(&ptr);
 		dict_index_t*	index = dict_table_get_next_index(clust_index);
 
Description: This is for the adjustments done when backporting cve fix from upgrded version 10.11.12
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 mariadb (1:10.11.11-0+deb12u1) bookworm; urgency=medium
 .
   [ Otto Kekäläinen ]
   * New upstream version 10.11.11. Includes fixes for several defects
     as noted at https://mariadb.com/kb/en/mariadb-10-11-11-release-notes/ as
     well the following security issues:
     - CVE-2025-21490
   * This release includes upstream version 10.11.10, with fixes for regressions
     as noted at https://mariadb.com/kb/en/mariadb-10-11-10-release-notes/
   * Includes fix for main.having_cond_pushdown test failure on s390x which also
     affected builds in Debian (https://jira.mariadb.org/browse/MDEV-34650)
   * Previous version 10.11.7 included fix for InnoDB hang (Closes: #1069895)
   * Include Debian packaging bugfixes done upstream:
     - MDEV-35907: debian-start script fails when using non-standard socket path
     - Set CAP_IPC_LOCK capability if possible
   * Update server trace to include new parameters and values. This includes now
     MariaDB client parameter 'quick-max-column-width' and new MariaDB Server
     parameters 'innodb-log-file-mmap' and 'optimizer-join-limit-pref-ratio'.
     Also the parameters 'innodb-lru-flush-size' and
     'innodb-purge-rseg-truncate-frequency' seems to have been removed, while
     'optimizer-adjust-secondary-key-costs' got new default values.
   * Update configuration traces to match innodb_log_file_mmap changes done in
     MDEV-35785
   * Update configuration traces with new query allocator values from MDEV-35750
   * Skip test main.mysqld--help-aria due to MDEV-34733
   * Include several restart/shutdown related fixes that have been in Debian
     unstable in MariaDB 11.4 for a long time, and which are likely needed to
     avoid occasional shutdown issues, in particular on upgrades (LP: #2034125)
     in both Debian and Ubuntu
     - Make SysV init more verbose in case of MariaDB start failures (Related: #1033234)
     - Limit check of running mysqld/mariadbd to system users (Closes: #1032047)
     - When shutting down 'mariadbd', fallback to 'mysqld'
   * Add Lintian overrides for new upstream documentation JavaScript files
   * Make d/watch more specific to circumvent bug in .10 vs .11 detection
 .
   [ Phil Dibowitz ]
   * Add some info on getting back to passwordless root (Closes: #1088133)
Author: Otto Kekäläinen <otto@debian.org>
Bug-Debian: https://bugs.debian.org/1032047
Bug-Debian: https://bugs.debian.org/1069895
Bug-Debian: https://bugs.debian.org/1088133
Bug-Ubuntu: https://bugs.launchpad.net/bugs/2034125

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2025-05-22

--- mariadb-10.11.11.orig/mysql-test/main/derived_cond_pushdown.result
+++ mariadb-10.11.11/mysql-test/main/derived_cond_pushdown.result
@@ -11771,35 +11771,45 @@ EXPLAIN
   "query_block": {
     "select_id": 1,
     "temporary_table": {
-      "table": {
-        "table_name": "<derived4>",
-        "access_type": "ALL",
-        "rows": 12,
-        "filtered": 100,
-        "materialized": {
-          "query_block": {
-            "select_id": 4,
+      "nested_loop": [
+        {
+          "table": {
+            "table_name": "<derived4>",
+            "access_type": "ALL",
+            "rows": 12,
+            "filtered": 100,
+            "materialized": {
+              "query_block": {
+                "select_id": 4,
+                "nested_loop": [
+                  {
+                    "table": {
+                      "table_name": "t1",
+                      "access_type": "ALL",
+                      "rows": 12,
+                      "filtered": 100
+                    }
+                  }
+                ]
+              }
+            }
+          }
+        },
+        {
+          "block-nl-join": {
             "table": {
               "table_name": "t1",
               "access_type": "ALL",
               "rows": 12,
-              "filtered": 100
-            }
+              "filtered": 100,
+              "attached_condition": "t1.f is not null"
+            },
+            "buffer_type": "flat",
+            "buffer_size": "64",
+            "join_type": "BNL"
           }
         }
-      },
-      "block-nl-join": {
-        "table": {
-          "table_name": "t1",
-          "access_type": "ALL",
-          "rows": 12,
-          "filtered": 100,
-          "attached_condition": "t1.f is not null"
-        },
-        "buffer_type": "flat",
-        "buffer_size": "64",
-        "join_type": "BNL"
-      }
+      ]
     }
   }
 }
@@ -11830,36 +11840,46 @@ EXPLAIN
   "query_block": {
     "select_id": 1,
     "temporary_table": {
-      "table": {
-        "table_name": "t1",
-        "access_type": "ALL",
-        "rows": 8,
-        "filtered": 100,
-        "attached_condition": "t1.f is not null"
-      },
-      "table": {
-        "table_name": "<derived4>",
-        "access_type": "ref",
-        "possible_keys": ["key0"],
-        "key": "key0",
-        "key_length": "4",
-        "used_key_parts": ["f"],
-        "ref": ["test.t1.f"],
-        "rows": 2,
-        "filtered": 100,
-        "materialized": {
-          "query_block": {
-            "select_id": 4,
-            "table": {
-              "table_name": "t1",
-              "access_type": "ALL",
-              "rows": 8,
-              "filtered": 100,
-              "attached_condition": "t1.f is not null"
+      "nested_loop": [
+        {
+          "table": {
+            "table_name": "t1",
+            "access_type": "ALL",
+            "rows": 8,
+            "filtered": 100,
+            "attached_condition": "t1.f is not null"
+          }
+        },
+        {
+          "table": {
+            "table_name": "<derived4>",
+            "access_type": "ref",
+            "possible_keys": ["key0"],
+            "key": "key0",
+            "key_length": "4",
+            "used_key_parts": ["f"],
+            "ref": ["test.t1.f"],
+            "rows": 2,
+            "filtered": 100,
+            "materialized": {
+              "query_block": {
+                "select_id": 4,
+                "nested_loop": [
+                  {
+                    "table": {
+                      "table_name": "t1",
+                      "access_type": "ALL",
+                      "rows": 8,
+                      "filtered": 100,
+                      "attached_condition": "t1.f is not null"
+                    }
+                  }
+                ]
+              }
             }
           }
         }
-      }
+      ]
     }
   }
 }
--- mariadb-10.11.11.orig/mysql-test/main/insert_select.result
+++ mariadb-10.11.11/mysql-test/main/insert_select.result
@@ -1067,25 +1067,31 @@ EXPLAIN
   "query_block": {
     "select_id": 1,
     "temporary_table": {
-      "table": {
-        "table_name": "t1",
-        "access_type": "ALL",
-        "rows": 4,
-        "filtered": 100,
-        "attached_condition": "t1.`id` = 3"
-      },
-      "block-nl-join": {
-        "table": {
-          "table_name": "t",
-          "access_type": "ALL",
-          "rows": 4,
-          "filtered": 100,
-          "attached_condition": "t.`id` = 3"
+      "nested_loop": [
+        {
+          "table": {
+            "table_name": "t1",
+            "access_type": "ALL",
+            "rows": 4,
+            "filtered": 100,
+            "attached_condition": "t1.`id` = 3"
+          }
         },
-        "buffer_type": "flat",
-        "buffer_size": "65",
-        "join_type": "BNL"
-      }
+        {
+          "block-nl-join": {
+            "table": {
+              "table_name": "t",
+              "access_type": "ALL",
+              "rows": 4,
+              "filtered": 100,
+              "attached_condition": "t.`id` = 3"
+            },
+            "buffer_type": "flat",
+            "buffer_size": "65",
+            "join_type": "BNL"
+          }
+        }
+      ]
     }
   }
 }
--- mariadb-10.11.11.orig/mysql-test/main/timezone.test
+++ mariadb-10.11.11/mysql-test/main/timezone.test
@@ -8,7 +8,7 @@ select FROM_UNIXTIME(24*3600);
 enable_query_log;
 
 # The following is because of daylight saving time
---replace_result MEST CET MET CET
+--replace_result MEST CET MET CET CEST CET
 show variables like "system_time_zone";
 
 --echo #
--- mariadb-10.11.11.orig/mysql-test/main/view.result
+++ mariadb-10.11.11/mysql-test/main/view.result
@@ -956,7 +956,7 @@ insert into v3 (col1) values ((select ma
 insert into v3 (col1) values ((select max(col1) from t1));
 insert into v3 (col1) values ((select max(col1) from v2));
 insert into v3 (col1) values ((select CONVERT_TZ('20050101000000','UTC','MET') from v2 LIMIT 1));
-ERROR 22003: Out of range value for column 'col1' at row 2
+ERROR 22003: Out of range value for column 'col1' at row 3
 insert into v3 (col1) values ((select CONVERT_TZ('20050101000000','UTC','MET') from t2));
 insert into t3 values ((select CONVERT_TZ('20050101000000','UTC','MET') from t2));
 ERROR 23000: Column 'col1' cannot be nullFrom 0f19b4f745deb0bb20af48e81b3376a8f95bf488 Mon Sep 17 00:00:00 2001
Date: Thu, 22 May 2025 13:38:47 +0530
Subject: [PATCH] FIX FOR CVE-2023-52969

---
 mysql-test/main/derived_cond_pushdown.result  | 163 ++++++------------
 mysql-test/main/derived_view.result           |   2 +
 mysql-test/main/insert.result                 |  72 +++++++-
 mysql-test/main/insert.test                   |  56 +++++-
 mysql-test/main/insert_returning.result       |   2 +
 mysql-test/main/insert_returning.test         |   2 +
 mysql-test/main/insert_select.result          | 129 +++++++++++++-
 mysql-test/main/insert_select.test            |  56 +++++-
 mysql-test/main/lowercase_view.result         |  12 --
 mysql-test/main/lowercase_view.test           |  12 --
 mysql-test/main/merge.result                  |  17 +-
 mysql-test/main/merge.test                    |  17 +-
 mysql-test/main/subselect.result              |  20 ++-
 mysql-test/main/subselect.test                |  10 +-
 mysql-test/main/subselect_elimination.result  |  12 +-
 mysql-test/main/subselect_elimination.test    |   7 +-
 .../main/subselect_no_exists_to_in.result     |  20 ++-
 mysql-test/main/subselect_no_mat.result       |  20 ++-
 mysql-test/main/subselect_no_opts.result      |  20 ++-
 mysql-test/main/subselect_no_scache.result    |  20 ++-
 mysql-test/main/subselect_no_semijoin.result  |  20 ++-
 mysql-test/main/view.result                   |  49 ++++--
 mysql-test/main/view.test                     |  30 ++--
 mysql-test/suite/sql_sequence/other.result    |   1 -
 mysql-test/suite/sql_sequence/other.test      |   1 -
 sql/item.h                                    |  12 ++
 sql/item_subselect.cc                         |  24 +++
 sql/item_subselect.h                          |   1 +
 sql/sql_base.cc                               |  80 +++++++--
 sql/sql_base.h                                |   2 +
 sql/sql_insert.cc                             |  99 ++++++++++-
 sql/sql_insert.h                              |   2 +-
 sql/sql_lex.cc                                |  42 +++++
 sql/sql_lex.h                                 |   4 +
 sql/sql_prepare.cc                            |  17 +-
 sql/table.h                                   |   2 +
 tests/mysql_client_test.c                     | 159 +++++++++++++++++
 37 files changed, 959 insertions(+), 255 deletions(-)

diff --git a/mysql-test/main/derived_cond_pushdown.result b/mysql-test/main/derived_cond_pushdown.result
index 5c78274906b..86bdd20e25f 100644
--- a/mysql-test/main/derived_cond_pushdown.result
+++ b/mysql-test/main/derived_cond_pushdown.result
@@ -11761,9 +11761,8 @@ SELECT * FROM ( SELECT t1.f FROM v1 JOIN t1 ) AS t WHERE f IS NOT NULL;
 EXPLAIN INSERT INTO t1
 SELECT * FROM ( SELECT t1.f FROM v1 JOIN t1 ) AS t WHERE f IS NOT NULL;
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
-1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	144	Using where
-2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	12	
-2	DERIVED	t1	ALL	NULL	NULL	NULL	NULL	12	Using where; Using join buffer (flat, BNL join)
+1	PRIMARY	<derived4>	ALL	NULL	NULL	NULL	NULL	12	Using temporary
+1	PRIMARY	t1	ALL	NULL	NULL	NULL	NULL	12	Using where; Using join buffer (flat, BNL join)
 4	DERIVED	t1	ALL	NULL	NULL	NULL	NULL	12	
 EXPLAIN FORMAT=JSON INSERT INTO t1
 SELECT * FROM ( SELECT t1.f FROM v1 JOIN t1 ) AS t WHERE f IS NOT NULL;
@@ -11771,61 +11770,37 @@ EXPLAIN
 {
   "query_block": {
     "select_id": 1,
-    "nested_loop": [
-      {
-        "table": {
-          "table_name": "<derived2>",
-          "access_type": "ALL",
-          "rows": 144,
-          "filtered": 100,
-          "attached_condition": "t.f is not null",
-          "materialized": {
-            "query_block": {
-              "select_id": 2,
-              "nested_loop": [
-                {
-                  "table": {
-                    "table_name": "<derived4>",
-                    "access_type": "ALL",
-                    "rows": 12,
-                    "filtered": 100,
-                    "materialized": {
-                      "query_block": {
-                        "select_id": 4,
-                        "nested_loop": [
-                          {
-                            "table": {
-                              "table_name": "t1",
-                              "access_type": "ALL",
-                              "rows": 12,
-                              "filtered": 100
-                            }
-                          }
-                        ]
-                      }
-                    }
-                  }
-                },
-                {
-                  "block-nl-join": {
-                    "table": {
-                      "table_name": "t1",
-                      "access_type": "ALL",
-                      "rows": 12,
-                      "filtered": 100,
-                      "attached_condition": "t1.f is not null"
-                    },
-                    "buffer_type": "flat",
-                    "buffer_size": "64",
-                    "join_type": "BNL"
-                  }
-                }
-              ]
+    "temporary_table": {
+      "table": {
+        "table_name": "<derived4>",
+        "access_type": "ALL",
+        "rows": 12,
+        "filtered": 100,
+        "materialized": {
+          "query_block": {
+            "select_id": 4,
+            "table": {
+              "table_name": "t1",
+              "access_type": "ALL",
+              "rows": 12,
+              "filtered": 100
             }
           }
         }
+      },
+      "block-nl-join": {
+        "table": {
+          "table_name": "t1",
+          "access_type": "ALL",
+          "rows": 12,
+          "filtered": 100,
+          "attached_condition": "t1.f is not null"
+        },
+        "buffer_type": "flat",
+        "buffer_size": "64",
+        "join_type": "BNL"
       }
-    ]
+    }
   }
 }
 SELECT * FROM t1;
@@ -11854,62 +11829,38 @@ EXPLAIN
 {
   "query_block": {
     "select_id": 1,
-    "nested_loop": [
-      {
-        "table": {
-          "table_name": "<derived2>",
-          "access_type": "ALL",
-          "rows": 16,
-          "filtered": 100,
-          "attached_condition": "t.f is not null",
-          "materialized": {
-            "query_block": {
-              "select_id": 2,
-              "nested_loop": [
-                {
-                  "table": {
-                    "table_name": "t1",
-                    "access_type": "ALL",
-                    "rows": 8,
-                    "filtered": 100,
-                    "attached_condition": "t1.f is not null"
-                  }
-                },
-                {
-                  "table": {
-                    "table_name": "<derived4>",
-                    "access_type": "ref",
-                    "possible_keys": ["key0"],
-                    "key": "key0",
-                    "key_length": "4",
-                    "used_key_parts": ["f"],
-                    "ref": ["test.t1.f"],
-                    "rows": 2,
-                    "filtered": 100,
-                    "materialized": {
-                      "query_block": {
-                        "select_id": 4,
-                        "nested_loop": [
-                          {
-                            "table": {
-                              "table_name": "t1",
-                              "access_type": "ALL",
-                              "rows": 8,
-                              "filtered": 100,
-                              "attached_condition": "t1.f is not null"
-                            }
-                          }
-                        ]
-                      }
-                    }
-                  }
-                }
-              ]
+    "temporary_table": {
+      "table": {
+        "table_name": "t1",
+        "access_type": "ALL",
+        "rows": 8,
+        "filtered": 100,
+        "attached_condition": "t1.f is not null"
+      },
+      "table": {
+        "table_name": "<derived4>",
+        "access_type": "ref",
+        "possible_keys": ["key0"],
+        "key": "key0",
+        "key_length": "4",
+        "used_key_parts": ["f"],
+        "ref": ["test.t1.f"],
+        "rows": 2,
+        "filtered": 100,
+        "materialized": {
+          "query_block": {
+            "select_id": 4,
+            "table": {
+              "table_name": "t1",
+              "access_type": "ALL",
+              "rows": 8,
+              "filtered": 100,
+              "attached_condition": "t1.f is not null"
             }
           }
         }
       }
-    ]
+    }
   }
 }
 SELECT * FROM t1;
diff --git a/mysql-test/main/derived_view.result b/mysql-test/main/derived_view.result
index 28854b0f279..3f3f6815488 100644
--- a/mysql-test/main/derived_view.result
+++ b/mysql-test/main/derived_view.result
@@ -2461,6 +2461,8 @@ SELECT * FROM t1;
 a
 1
 1
+1
+1
 drop table t1,t2;
 set optimizer_switch=@save968720_optimizer_switch;
 #
diff --git a/mysql-test/main/insert.result b/mysql-test/main/insert.result
index f1eb9801e2a..7636ffcd36d 100644
--- a/mysql-test/main/insert.result
+++ b/mysql-test/main/insert.result
@@ -806,5 +806,75 @@ a
 8
 drop table t1;
 #
-# End of 10.5 tests
+# MDEV-32086 Server crash when inserting from derived table containing insert target table
+# (part 2)
 #
+create table t1 (pk int, id int);
+insert into t1 values (2,2), (3,3), (4,4);
+select * from t1;
+pk	id
+2	2
+3	3
+4	4
+select 101+count(*)
+from
+(
+select dt2.id
+from (select id from t1) dt2, t1 t where t.id=dt2.id
+) dt
+where dt.id<1000;
+101+count(*)
+104
+prepare s from '
+insert into t1 values(
+  (select 101+count(*)
+   from
+   (
+      select dt2.id
+      from (select id from t1) dt2, t1 t where t.id=dt2.id
+   ) dt
+   where dt.id<1000
+  ), 123
+)
+';
+execute s;
+select * from t1;
+pk	id
+2	2
+3	3
+4	4
+104	123
+select 101+count(*)
+from
+(
+select dt2.id
+from (select id from t1) dt2, t1 t where t.id=dt2.id
+) dt
+where dt.id<1000;
+101+count(*)
+105
+execute s;
+select * from t1;
+pk	id
+2	2
+3	3
+4	4
+104	123
+105	123
+drop table t1;
+#
+# Try this: INSERT INTO t1 VALUES ... reference to t1
+#           RETURNING (subquery not touching t1)
+create table t1 (a int, b int);
+create table t2 (a int, b int);
+# This is accepted:
+insert into t1 (a) values 
+(3),
+((select max(a) from t1)) 
+returning 
+a, b, (select max(a) from t2);
+a	b	(select max(a) from t2)
+3	NULL	NULL
+NULL	NULL	NULL
+drop table t1,t2;
+# End of 10.5 tests
diff --git a/mysql-test/main/insert.test b/mysql-test/main/insert.test
index 4b5a5181f09..ec100cb114e 100644
--- a/mysql-test/main/insert.test
+++ b/mysql-test/main/insert.test
@@ -675,5 +675,59 @@ select * from t1;
 drop table t1;
 
 --echo #
---echo # End of 10.5 tests
+--echo # MDEV-32086 Server crash when inserting from derived table containing insert target table
+--echo # (part 2)
 --echo #
+
+create table t1 (pk int, id int);
+insert into t1 values (2,2), (3,3), (4,4);
+select * from t1;
+select 101+count(*)
+   from
+   (
+      select dt2.id
+      from (select id from t1) dt2, t1 t where t.id=dt2.id
+   ) dt
+   where dt.id<1000;
+prepare s from '
+insert into t1 values(
+  (select 101+count(*)
+   from
+   (
+      select dt2.id
+      from (select id from t1) dt2, t1 t where t.id=dt2.id
+   ) dt
+   where dt.id<1000
+  ), 123
+)
+';
+execute s;
+select * from t1;
+select 101+count(*)
+   from
+   (
+      select dt2.id
+      from (select id from t1) dt2, t1 t where t.id=dt2.id
+   ) dt
+   where dt.id<1000;
+execute s;
+select * from t1;
+
+drop table t1;
+
+--echo #
+--echo # Try this: INSERT INTO t1 VALUES ... reference to t1
+--echo #           RETURNING (subquery not touching t1)
+create table t1 (a int, b int);
+create table t2 (a int, b int);
+
+--echo # This is accepted:
+insert into t1 (a) values 
+  (3),
+  ((select max(a) from t1)) 
+returning 
+  a, b, (select max(a) from t2);
+
+drop table t1,t2;
+
+--echo # End of 10.5 tests
diff --git a/mysql-test/main/insert_returning.result b/mysql-test/main/insert_returning.result
index b35fd3bf35f..ba3f28bf69f 100644
--- a/mysql-test/main/insert_returning.result
+++ b/mysql-test/main/insert_returning.result
@@ -498,6 +498,8 @@ t1 WHERE id1=1)
 5	6
 INSERT INTO t2(id2,val2) VALUES(5,'f') RETURNING (SELECT id2 FROM t2);
 ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+INSERT INTO t2(id2,val2) VALUES(5,'f') RETURNING (SELECT 1 UNION SELECT id2 FROM t2);
+ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
 INSERT INTO t2 (id2, val2) VALUES (6,'f') RETURNING t1.*;
 ERROR 42S02: Unknown table 'test.t1'
 #
diff --git a/mysql-test/main/insert_returning.test b/mysql-test/main/insert_returning.test
index 837d61d2c16..c2ad613aed0 100644
--- a/mysql-test/main/insert_returning.test
+++ b/mysql-test/main/insert_returning.test
@@ -199,6 +199,8 @@ INSERT INTO t2(id2,val2) VALUES(5,'e') RETURNING id2, (SELECT id1+id2 FROM
 t1 WHERE id1=1);
 --error ER_UPDATE_TABLE_USED
 INSERT INTO t2(id2,val2) VALUES(5,'f') RETURNING (SELECT id2 FROM t2);
+--error ER_UPDATE_TABLE_USED
+INSERT INTO t2(id2,val2) VALUES(5,'f') RETURNING (SELECT 1 UNION SELECT id2 FROM t2);
 --error ER_BAD_TABLE_ERROR
 INSERT INTO t2 (id2, val2) VALUES (6,'f') RETURNING t1.*;
 
diff --git a/mysql-test/main/insert_select.result b/mysql-test/main/insert_select.result
index 07a2bd174d3..316f0c66a8e 100644
--- a/mysql-test/main/insert_select.result
+++ b/mysql-test/main/insert_select.result
@@ -1030,6 +1030,133 @@ a
 3
 DROP VIEW v1;
 DROP TABLE t1;
+create table t1 (pk int, id int);
+insert into t1 values (2,2), (3,3), (4,4);
+insert into t1
+select 1,10
+from
+(
+select dt2.id from (select id from t1) dt2, t1 t where t.id=dt2.id
+) dt
+where dt.id=3;
+select * from t1;
+pk	id
+2	2
+3	3
+4	4
+1	10
+explain insert into t1
+select 1,10
+from
+(
+select dt2.id from (select id from t1) dt2, t1 t where t.id=dt2.id
+) dt
+where dt.id=3;
+id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
+1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	4	Using where; Using temporary
+1	SIMPLE	t	ALL	NULL	NULL	NULL	NULL	4	Using where; Using join buffer (flat, BNL join)
+explain format=json insert into t1
+select 1,10
+from
+(
+select dt2.id from (select id from t1) dt2, t1 t where t.id=dt2.id
+) dt
+where dt.id=3;
+EXPLAIN
+{
+  "query_block": {
+    "select_id": 1,
+    "temporary_table": {
+      "table": {
+        "table_name": "t1",
+        "access_type": "ALL",
+        "rows": 4,
+        "filtered": 100,
+        "attached_condition": "t1.`id` = 3"
+      },
+      "block-nl-join": {
+        "table": {
+          "table_name": "t",
+          "access_type": "ALL",
+          "rows": 4,
+          "filtered": 100,
+          "attached_condition": "t.`id` = 3"
+        },
+        "buffer_type": "flat",
+        "buffer_size": "65",
+        "join_type": "BNL"
+      }
+    }
+  }
+}
+prepare stmt from "insert into t1
+select 1,10
+from
+(
+select dt2.id from (select id from t1) dt2, t1 t where t.id=dt2.id
+) dt
+where dt.id=3";
+execute stmt;
+select * from t1;
+pk	id
+2	2
+3	3
+4	4
+1	10
+1	10
+execute stmt;
+select * from t1;
+pk	id
+2	2
+3	3
+4	4
+1	10
+1	10
+1	10
+deallocate prepare stmt;
+create procedure p() insert into t1
+select 1,10
+from
+(
+select dt2.id from (select id from t1) dt2, t1 t where t.id=dt2.id
+) dt
+where dt.id=3;
+call p();
+select * from t1;
+pk	id
+2	2
+3	3
+4	4
+1	10
+1	10
+1	10
+1	10
+call p();
+select * from t1;
+pk	id
+2	2
+3	3
+4	4
+1	10
+1	10
+1	10
+1	10
+1	10
+drop procedure p;
+drop table t1;
 #
-# End of 10.5 test
+# MDEV-33139: Crash of INSERT SELECT when preparing structures for
+# split optimization
 #
+CREATE TABLE v0 ( v1 INT UNIQUE ) ;
+INSERT INTO v0 ( v1 ) VALUES
+( ( SELECT 1
+FROM
+( SELECT v1
+FROM v0 GROUP BY v1 ) AS v6 NATURAL JOIN
+v0 AS v2 NATURAL JOIN
+v0 AS v4 NATURAL JOIN
+v0 AS v3 NATURAL JOIN
+( SELECT v1 FROM v0 ) AS v7 ) ) ;
+DROP TABLE v0;
+# End of 10.5 tests
diff --git a/mysql-test/main/insert_select.test b/mysql-test/main/insert_select.test
index 0e9bd05a93e..5c2691c9dae 100644
--- a/mysql-test/main/insert_select.test
+++ b/mysql-test/main/insert_select.test
@@ -591,6 +591,60 @@ SELECT * FROM t1;
 DROP VIEW v1;
 DROP TABLE t1;
 
+#
+# MDEV-32086: condition pushdown into two mergeable derived tables,
+#             one containing the other, when they are forced to be
+#             materialized in INSERT
+#
+create table t1 (pk int, id int);
+insert into t1 values (2,2), (3,3), (4,4);
+
+let $q=
+insert into t1
+  select 1,10
+  from
+  (
+    select dt2.id from (select id from t1) dt2, t1 t where t.id=dt2.id
+  ) dt
+  where dt.id=3;
+
+eval $q;
+select * from t1;
+
+eval explain $q;
+eval explain format=json $q;
+
+eval prepare stmt from "$q";
+execute stmt;
+select * from t1;
+execute stmt;
+select * from t1;
+deallocate prepare stmt;
+
+eval create procedure p() $q;
+call p();
+select * from t1;
+call p();
+select * from t1;
+drop procedure p;
+
+drop table t1;
+
 --echo #
---echo # End of 10.5 test
+--echo # MDEV-33139: Crash of INSERT SELECT when preparing structures for
+--echo # split optimization
 --echo #
+
+CREATE TABLE v0 ( v1 INT UNIQUE ) ;
+INSERT INTO v0 ( v1 ) VALUES
+  ( ( SELECT 1
+      FROM
+        ( SELECT v1
+          FROM v0 GROUP BY v1 ) AS v6 NATURAL JOIN
+               v0 AS v2 NATURAL JOIN
+               v0 AS v4 NATURAL JOIN
+               v0 AS v3 NATURAL JOIN
+               ( SELECT v1 FROM v0 ) AS v7 ) ) ;
+DROP TABLE v0;
+
+--echo # End of 10.5 tests
diff --git a/mysql-test/main/lowercase_view.result b/mysql-test/main/lowercase_view.result
index af53f67869d..845df4d647d 100644
--- a/mysql-test/main/lowercase_view.result
+++ b/mysql-test/main/lowercase_view.result
@@ -16,29 +16,17 @@ create view v1Aa as select * from t1aA;
 create view v2aA as select * from v1aA;
 create view v3Aa as select v2Aa.col1 from v2aA,t2Aa where v2Aa.col1 = t2aA.col1;
 insert into v2Aa values ((select max(col1) from v1aA));
-ERROR HY000: The definition of table 'v1aA' prevents operation INSERT on table 'v2Aa'
 insert into t1aA values ((select max(col1) from v1Aa));
-ERROR HY000: The definition of table 'v1Aa' prevents operation INSERT on table 't1aA'
 insert into v2aA values ((select max(col1) from v1aA));
-ERROR HY000: The definition of table 'v1aA' prevents operation INSERT on table 'v2aA'
 insert into v2Aa values ((select max(col1) from t1Aa));
-ERROR HY000: The definition of table 'v2Aa' prevents operation INSERT on table 'v2Aa'
 insert into t1aA values ((select max(col1) from t1Aa));
-ERROR HY000: Table 't1aA' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into v2aA values ((select max(col1) from t1aA));
-ERROR HY000: The definition of table 'v2aA' prevents operation INSERT on table 'v2aA'
 insert into v2Aa values ((select max(col1) from v2aA));
-ERROR HY000: Table 'v2Aa' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into t1Aa values ((select max(col1) from v2Aa));
-ERROR HY000: The definition of table 'v2Aa' prevents operation INSERT on table 't1Aa'
 insert into v2aA values ((select max(col1) from v2Aa));
-ERROR HY000: Table 'v2aA' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into v3Aa (col1) values ((select max(col1) from v1Aa));
-ERROR HY000: The definition of table 'v1Aa' prevents operation INSERT on table 'v3Aa'
 insert into v3aA (col1) values ((select max(col1) from t1aA));
-ERROR HY000: The definition of table 'v3aA' prevents operation INSERT on table 'v3aA'
 insert into v3Aa (col1) values ((select max(col1) from v2aA));
-ERROR HY000: The definition of table 'v2aA' prevents operation INSERT on table 'v3Aa'
 drop view v3aA,v2Aa,v1aA;
 drop table t1Aa,t2Aa;
 create table t1Aa (col1 int);
diff --git a/mysql-test/main/lowercase_view.test b/mysql-test/main/lowercase_view.test
index cdd0256d639..52aae7b2b3c 100644
--- a/mysql-test/main/lowercase_view.test
+++ b/mysql-test/main/lowercase_view.test
@@ -23,29 +23,17 @@ create table t2aA (col1 int);
 create view v1Aa as select * from t1aA;
 create view v2aA as select * from v1aA;
 create view v3Aa as select v2Aa.col1 from v2aA,t2Aa where v2Aa.col1 = t2aA.col1;
--- error 1443
 insert into v2Aa values ((select max(col1) from v1aA));
--- error 1443
 insert into t1aA values ((select max(col1) from v1Aa));
--- error 1443
 insert into v2aA values ((select max(col1) from v1aA));
--- error 1443
 insert into v2Aa values ((select max(col1) from t1Aa));
--- error 1093
 insert into t1aA values ((select max(col1) from t1Aa));
--- error 1443
 insert into v2aA values ((select max(col1) from t1aA));
--- error 1093
 insert into v2Aa values ((select max(col1) from v2aA));
--- error 1443
 insert into t1Aa values ((select max(col1) from v2Aa));
--- error 1093
 insert into v2aA values ((select max(col1) from v2Aa));
--- error 1443
 insert into v3Aa (col1) values ((select max(col1) from v1Aa));
--- error 1443
 insert into v3aA (col1) values ((select max(col1) from t1aA));
--- error 1443
 insert into v3Aa (col1) values ((select max(col1) from v2aA));
 drop view v3aA,v2Aa,v1aA;
 drop table t1Aa,t2Aa;
diff --git a/mysql-test/main/merge.result b/mysql-test/main/merge.result
index e7330b7e54b..6bf413ac720 100644
--- a/mysql-test/main/merge.result
+++ b/mysql-test/main/merge.result
@@ -3678,33 +3678,22 @@ insert into tmp (b) values (1);
 insert into t1 (a) values (1);
 insert into t3 (b) values (1);
 insert into m1 (a) values ((select max(a) from m1));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from m2));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from t1));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from t2));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from t3, m1));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from t3, m2));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from t3, t1));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from t3, t2));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from tmp, m1));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from tmp, m2));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from tmp, t1));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from tmp, t2));
-ERROR HY000: Table 'm1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into m1 (a) values ((select max(a) from v1));
-ERROR HY000: The definition of table 'v1' prevents operation INSERT on table 'm1'
 insert into m1 (a) values ((select max(a) from tmp, v1));
-ERROR HY000: The definition of table 'v1' prevents operation INSERT on table 'm1'
+select count(*) from m1;
+count(*)
+15
 drop view v1;
 drop temporary table tmp;
 drop table t1, t2, t3, m1, m2;
diff --git a/mysql-test/main/merge.test b/mysql-test/main/merge.test
index aacfdd686d8..58197d9b0ad 100644
--- a/mysql-test/main/merge.test
+++ b/mysql-test/main/merge.test
@@ -2670,37 +2670,24 @@ insert into tmp (b) values (1);
 
 insert into t1 (a) values (1);
 insert into t3 (b) values (1);
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from m1));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from m2));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from t1));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from t2));
 
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from t3, m1));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from t3, m2));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from t3, t1));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from t3, t2));
 
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from tmp, m1));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from tmp, m2));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from tmp, t1));
---error ER_UPDATE_TABLE_USED
 insert into m1 (a) values ((select max(a) from tmp, t2));
- 
---error ER_VIEW_PREVENT_UPDATE
+
 insert into m1 (a) values ((select max(a) from v1));
---error ER_VIEW_PREVENT_UPDATE
 insert into m1 (a) values ((select max(a) from tmp, v1));
+select count(*) from m1;
 
 
 drop view v1;
diff --git a/mysql-test/main/subselect.result b/mysql-test/main/subselect.result
index e93cbbd3625..790ad83fed6 100644
--- a/mysql-test/main/subselect.result
+++ b/mysql-test/main/subselect.result
@@ -679,22 +679,24 @@ create table t3 (b int);
 insert into t2 values (1);
 insert into t3 values (1),(2);
 INSERT INTO t1 (x) VALUES ((SELECT x FROM t1));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 INSERT INTO t1 (x) VALUES ((SELECT b FROM t3));
 ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t1 (x) VALUES ((SELECT a FROM t2));
 select * from t1;
 x
+NULL
 1
 insert into t2 values (1);
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 INSERT INTO t1 (x) select (SELECT SUM(a)+1 FROM t2) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -702,6 +704,7 @@ x
 INSERT INTO t1 (x) select (SELECT SUM(x)+2 FROM t1) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -711,6 +714,7 @@ x
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -727,7 +731,7 @@ insert into t3 values (1),(2);
 select * from t1;
 x	y
 replace into t1 (x, y) VALUES ((SELECT x FROM t1), (SELECT a+1 FROM t2));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 23000: Column 'x' cannot be null
 replace into t1 (x, y) VALUES ((SELECT a FROM t3), (SELECT a+1 FROM t2));
 ERROR 21000: Subquery returns more than 1 row
 replace into t1 (x, y) VALUES ((SELECT a FROM t2), (SELECT a+1 FROM t2));
@@ -795,13 +799,21 @@ SELECT * FROM t2 WHERE id IN (SELECT 5 UNION SELECT 2);
 id
 2
 INSERT INTO t2 VALUES ((SELECT * FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t2 VALUES ((SELECT id FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
+select * from t2;
+id
+1
+2
+INSERT INTO t2 VALUES ((SELECT count(*) FROM t2));
+INSERT INTO t2 VALUES ((SELECT max(id) FROM t2));
 SELECT * FROM t2;
 id
 1
 2
+2
+2
 CREATE TABLE t1 (id int(11) default NULL, KEY id (id)) ENGINE=MyISAM CHARSET=latin1;
 INSERT INTO t1 values (1),(1);
 UPDATE t2 SET id=(SELECT * FROM t1);
diff --git a/mysql-test/main/subselect.test b/mysql-test/main/subselect.test
index 3906ec12c98..31cc55a1663 100644
--- a/mysql-test/main/subselect.test
+++ b/mysql-test/main/subselect.test
@@ -419,7 +419,6 @@ create table t2 (a int) ENGINE=MyISAM;
 create table t3 (b int);
 insert into t2 values (1);
 insert into t3 values (1),(2);
--- error ER_UPDATE_TABLE_USED
 INSERT INTO t1 (x) VALUES ((SELECT x FROM t1));
 -- error ER_SUBQUERY_NO_1_ROW
 INSERT INTO t1 (x) VALUES ((SELECT b FROM t3));
@@ -454,7 +453,7 @@ create table t3 (a int);
 insert into t2 values (1);
 insert into t3 values (1),(2);
 select * from t1;
--- error ER_UPDATE_TABLE_USED
+-- error ER_BAD_NULL_ERROR
 replace into t1 (x, y) VALUES ((SELECT x FROM t1), (SELECT a+1 FROM t2));
 -- error ER_SUBQUERY_NO_1_ROW
 replace into t1 (x, y) VALUES ((SELECT a FROM t3), (SELECT a+1 FROM t2));
@@ -494,10 +493,13 @@ EXPLAIN EXTENDED SELECT * FROM t2 WHERE id IN (SELECT 1 UNION SELECT 3);
 --disable_prepare_warnings
 SELECT * FROM t2 WHERE id IN (SELECT 5 UNION SELECT 3);
 SELECT * FROM t2 WHERE id IN (SELECT 5 UNION SELECT 2);
--- error ER_UPDATE_TABLE_USED
+-- error ER_SUBQUERY_NO_1_ROW
 INSERT INTO t2 VALUES ((SELECT * FROM t2));
--- error ER_UPDATE_TABLE_USED
+-- error ER_SUBQUERY_NO_1_ROW
 INSERT INTO t2 VALUES ((SELECT id FROM t2));
+select * from t2;
+INSERT INTO t2 VALUES ((SELECT count(*) FROM t2));
+INSERT INTO t2 VALUES ((SELECT max(id) FROM t2));
 SELECT * FROM t2;
 CREATE TABLE t1 (id int(11) default NULL, KEY id (id)) ENGINE=MyISAM CHARSET=latin1;
 INSERT INTO t1 values (1),(1);
diff --git a/mysql-test/main/subselect_elimination.result b/mysql-test/main/subselect_elimination.result
index 17400e490bc..e2bbbe1b6f2 100644
--- a/mysql-test/main/subselect_elimination.result
+++ b/mysql-test/main/subselect_elimination.result
@@ -136,12 +136,22 @@ DROP TABLE t1;
 #  access within null pointer
 CREATE TABLE x (x INT) ENGINE=InnoDB;
 INSERT INTO x (x) VALUES (0);
+select NULL IN (SELECT (SELECT x FROM (SELECT x FROM
+(SELECT 0 IN (SELECT x=0 FROM (SELECT x FROM (SELECT (SELECT (SELECT (SELECT
+(SELECT 0 AS x) FROM x AS x) IN (SELECT 0 AS x) AS x) FROM x AS x) IN
+(SELECT x WHERE x=0) AS x FROM x AS x) AS x) AS x GROUP BY x) AS x FROM x) AS x)
+AS x) IN (SELECT 0 AS x) AS x FROM x) as exp;
+exp
+NULL
 INSERT INTO x (x) VALUES (x IN (SELECT (SELECT x FROM (SELECT x FROM
 (SELECT 0 IN (SELECT x=0 FROM (SELECT x FROM (SELECT (SELECT (SELECT (SELECT
 (SELECT 0 AS x) FROM x AS x) IN (SELECT 0 AS x) AS x) FROM x AS x) IN
 (SELECT x WHERE x=0) AS x FROM x AS x) AS x) AS x GROUP BY x) AS x FROM x) AS x)
 AS x) IN (SELECT 0 AS x) AS x FROM x));
-ERROR HY000: Table 'x' is specified twice, both as a target for 'INSERT' and as a separate source for data
+select * from x;
+x
+0
+NULL
 DROP TABLE x;
 # MDEV-28622: Item_subselect eliminated flag set but Item still
 #   evaluated/used.
diff --git a/mysql-test/main/subselect_elimination.test b/mysql-test/main/subselect_elimination.test
index 9d973477b28..e2b5b50f36d 100644
--- a/mysql-test/main/subselect_elimination.test
+++ b/mysql-test/main/subselect_elimination.test
@@ -133,12 +133,17 @@ DROP TABLE t1;
 
 CREATE TABLE x (x INT) ENGINE=InnoDB;
 INSERT INTO x (x) VALUES (0);
---error ER_UPDATE_TABLE_USED
+select NULL IN (SELECT (SELECT x FROM (SELECT x FROM
+(SELECT 0 IN (SELECT x=0 FROM (SELECT x FROM (SELECT (SELECT (SELECT (SELECT
+(SELECT 0 AS x) FROM x AS x) IN (SELECT 0 AS x) AS x) FROM x AS x) IN
+(SELECT x WHERE x=0) AS x FROM x AS x) AS x) AS x GROUP BY x) AS x FROM x) AS x)
+AS x) IN (SELECT 0 AS x) AS x FROM x) as exp;
 INSERT INTO x (x) VALUES (x IN (SELECT (SELECT x FROM (SELECT x FROM
 (SELECT 0 IN (SELECT x=0 FROM (SELECT x FROM (SELECT (SELECT (SELECT (SELECT
 (SELECT 0 AS x) FROM x AS x) IN (SELECT 0 AS x) AS x) FROM x AS x) IN
 (SELECT x WHERE x=0) AS x FROM x AS x) AS x) AS x GROUP BY x) AS x FROM x) AS x)
 AS x) IN (SELECT 0 AS x) AS x FROM x));
+select * from x;
 DROP TABLE x;
 
 --echo # MDEV-28622: Item_subselect eliminated flag set but Item still
diff --git a/mysql-test/main/subselect_no_exists_to_in.result b/mysql-test/main/subselect_no_exists_to_in.result
index a848cf53d78..f0616b078cd 100644
--- a/mysql-test/main/subselect_no_exists_to_in.result
+++ b/mysql-test/main/subselect_no_exists_to_in.result
@@ -683,22 +683,24 @@ create table t3 (b int);
 insert into t2 values (1);
 insert into t3 values (1),(2);
 INSERT INTO t1 (x) VALUES ((SELECT x FROM t1));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 INSERT INTO t1 (x) VALUES ((SELECT b FROM t3));
 ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t1 (x) VALUES ((SELECT a FROM t2));
 select * from t1;
 x
+NULL
 1
 insert into t2 values (1);
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 INSERT INTO t1 (x) select (SELECT SUM(a)+1 FROM t2) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -706,6 +708,7 @@ x
 INSERT INTO t1 (x) select (SELECT SUM(x)+2 FROM t1) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -715,6 +718,7 @@ x
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -731,7 +735,7 @@ insert into t3 values (1),(2);
 select * from t1;
 x	y
 replace into t1 (x, y) VALUES ((SELECT x FROM t1), (SELECT a+1 FROM t2));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 23000: Column 'x' cannot be null
 replace into t1 (x, y) VALUES ((SELECT a FROM t3), (SELECT a+1 FROM t2));
 ERROR 21000: Subquery returns more than 1 row
 replace into t1 (x, y) VALUES ((SELECT a FROM t2), (SELECT a+1 FROM t2));
@@ -799,13 +803,21 @@ SELECT * FROM t2 WHERE id IN (SELECT 5 UNION SELECT 2);
 id
 2
 INSERT INTO t2 VALUES ((SELECT * FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t2 VALUES ((SELECT id FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
+select * from t2;
+id
+1
+2
+INSERT INTO t2 VALUES ((SELECT count(*) FROM t2));
+INSERT INTO t2 VALUES ((SELECT max(id) FROM t2));
 SELECT * FROM t2;
 id
 1
 2
+2
+2
 CREATE TABLE t1 (id int(11) default NULL, KEY id (id)) ENGINE=MyISAM CHARSET=latin1;
 INSERT INTO t1 values (1),(1);
 UPDATE t2 SET id=(SELECT * FROM t1);
diff --git a/mysql-test/main/subselect_no_mat.result b/mysql-test/main/subselect_no_mat.result
index b995edc75ff..ac4789f219b 100644
--- a/mysql-test/main/subselect_no_mat.result
+++ b/mysql-test/main/subselect_no_mat.result
@@ -686,22 +686,24 @@ create table t3 (b int);
 insert into t2 values (1);
 insert into t3 values (1),(2);
 INSERT INTO t1 (x) VALUES ((SELECT x FROM t1));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 INSERT INTO t1 (x) VALUES ((SELECT b FROM t3));
 ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t1 (x) VALUES ((SELECT a FROM t2));
 select * from t1;
 x
+NULL
 1
 insert into t2 values (1);
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 INSERT INTO t1 (x) select (SELECT SUM(a)+1 FROM t2) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -709,6 +711,7 @@ x
 INSERT INTO t1 (x) select (SELECT SUM(x)+2 FROM t1) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -718,6 +721,7 @@ x
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -734,7 +738,7 @@ insert into t3 values (1),(2);
 select * from t1;
 x	y
 replace into t1 (x, y) VALUES ((SELECT x FROM t1), (SELECT a+1 FROM t2));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 23000: Column 'x' cannot be null
 replace into t1 (x, y) VALUES ((SELECT a FROM t3), (SELECT a+1 FROM t2));
 ERROR 21000: Subquery returns more than 1 row
 replace into t1 (x, y) VALUES ((SELECT a FROM t2), (SELECT a+1 FROM t2));
@@ -802,13 +806,21 @@ SELECT * FROM t2 WHERE id IN (SELECT 5 UNION SELECT 2);
 id
 2
 INSERT INTO t2 VALUES ((SELECT * FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t2 VALUES ((SELECT id FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
+select * from t2;
+id
+1
+2
+INSERT INTO t2 VALUES ((SELECT count(*) FROM t2));
+INSERT INTO t2 VALUES ((SELECT max(id) FROM t2));
 SELECT * FROM t2;
 id
 1
 2
+2
+2
 CREATE TABLE t1 (id int(11) default NULL, KEY id (id)) ENGINE=MyISAM CHARSET=latin1;
 INSERT INTO t1 values (1),(1);
 UPDATE t2 SET id=(SELECT * FROM t1);
diff --git a/mysql-test/main/subselect_no_opts.result b/mysql-test/main/subselect_no_opts.result
index 5f529e19db4..ae8f0d288ad 100644
--- a/mysql-test/main/subselect_no_opts.result
+++ b/mysql-test/main/subselect_no_opts.result
@@ -682,22 +682,24 @@ create table t3 (b int);
 insert into t2 values (1);
 insert into t3 values (1),(2);
 INSERT INTO t1 (x) VALUES ((SELECT x FROM t1));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 INSERT INTO t1 (x) VALUES ((SELECT b FROM t3));
 ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t1 (x) VALUES ((SELECT a FROM t2));
 select * from t1;
 x
+NULL
 1
 insert into t2 values (1);
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 INSERT INTO t1 (x) select (SELECT SUM(a)+1 FROM t2) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -705,6 +707,7 @@ x
 INSERT INTO t1 (x) select (SELECT SUM(x)+2 FROM t1) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -714,6 +717,7 @@ x
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -730,7 +734,7 @@ insert into t3 values (1),(2);
 select * from t1;
 x	y
 replace into t1 (x, y) VALUES ((SELECT x FROM t1), (SELECT a+1 FROM t2));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 23000: Column 'x' cannot be null
 replace into t1 (x, y) VALUES ((SELECT a FROM t3), (SELECT a+1 FROM t2));
 ERROR 21000: Subquery returns more than 1 row
 replace into t1 (x, y) VALUES ((SELECT a FROM t2), (SELECT a+1 FROM t2));
@@ -798,13 +802,21 @@ SELECT * FROM t2 WHERE id IN (SELECT 5 UNION SELECT 2);
 id
 2
 INSERT INTO t2 VALUES ((SELECT * FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t2 VALUES ((SELECT id FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
+select * from t2;
+id
+1
+2
+INSERT INTO t2 VALUES ((SELECT count(*) FROM t2));
+INSERT INTO t2 VALUES ((SELECT max(id) FROM t2));
 SELECT * FROM t2;
 id
 1
 2
+2
+2
 CREATE TABLE t1 (id int(11) default NULL, KEY id (id)) ENGINE=MyISAM CHARSET=latin1;
 INSERT INTO t1 values (1),(1);
 UPDATE t2 SET id=(SELECT * FROM t1);
diff --git a/mysql-test/main/subselect_no_scache.result b/mysql-test/main/subselect_no_scache.result
index 0745a5486bb..a57babc2bac 100644
--- a/mysql-test/main/subselect_no_scache.result
+++ b/mysql-test/main/subselect_no_scache.result
@@ -685,22 +685,24 @@ create table t3 (b int);
 insert into t2 values (1);
 insert into t3 values (1),(2);
 INSERT INTO t1 (x) VALUES ((SELECT x FROM t1));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 INSERT INTO t1 (x) VALUES ((SELECT b FROM t3));
 ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t1 (x) VALUES ((SELECT a FROM t2));
 select * from t1;
 x
+NULL
 1
 insert into t2 values (1);
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 INSERT INTO t1 (x) select (SELECT SUM(a)+1 FROM t2) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -708,6 +710,7 @@ x
 INSERT INTO t1 (x) select (SELECT SUM(x)+2 FROM t1) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -717,6 +720,7 @@ x
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -733,7 +737,7 @@ insert into t3 values (1),(2);
 select * from t1;
 x	y
 replace into t1 (x, y) VALUES ((SELECT x FROM t1), (SELECT a+1 FROM t2));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 23000: Column 'x' cannot be null
 replace into t1 (x, y) VALUES ((SELECT a FROM t3), (SELECT a+1 FROM t2));
 ERROR 21000: Subquery returns more than 1 row
 replace into t1 (x, y) VALUES ((SELECT a FROM t2), (SELECT a+1 FROM t2));
@@ -801,13 +805,21 @@ SELECT * FROM t2 WHERE id IN (SELECT 5 UNION SELECT 2);
 id
 2
 INSERT INTO t2 VALUES ((SELECT * FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t2 VALUES ((SELECT id FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
+select * from t2;
+id
+1
+2
+INSERT INTO t2 VALUES ((SELECT count(*) FROM t2));
+INSERT INTO t2 VALUES ((SELECT max(id) FROM t2));
 SELECT * FROM t2;
 id
 1
 2
+2
+2
 CREATE TABLE t1 (id int(11) default NULL, KEY id (id)) ENGINE=MyISAM CHARSET=latin1;
 INSERT INTO t1 values (1),(1);
 UPDATE t2 SET id=(SELECT * FROM t1);
diff --git a/mysql-test/main/subselect_no_semijoin.result b/mysql-test/main/subselect_no_semijoin.result
index 1a235d885e4..c51efec070d 100644
--- a/mysql-test/main/subselect_no_semijoin.result
+++ b/mysql-test/main/subselect_no_semijoin.result
@@ -682,22 +682,24 @@ create table t3 (b int);
 insert into t2 values (1);
 insert into t3 values (1),(2);
 INSERT INTO t1 (x) VALUES ((SELECT x FROM t1));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 INSERT INTO t1 (x) VALUES ((SELECT b FROM t3));
 ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t1 (x) VALUES ((SELECT a FROM t2));
 select * from t1;
 x
+NULL
 1
 insert into t2 values (1);
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 INSERT INTO t1 (x) select (SELECT SUM(a)+1 FROM t2) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -705,6 +707,7 @@ x
 INSERT INTO t1 (x) select (SELECT SUM(x)+2 FROM t1) FROM t2;
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -714,6 +717,7 @@ x
 INSERT DELAYED INTO t1 (x) VALUES ((SELECT SUM(a) FROM t2));
 select * from t1;
 x
+NULL
 1
 2
 3
@@ -730,7 +734,7 @@ insert into t3 values (1),(2);
 select * from t1;
 x	y
 replace into t1 (x, y) VALUES ((SELECT x FROM t1), (SELECT a+1 FROM t2));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 23000: Column 'x' cannot be null
 replace into t1 (x, y) VALUES ((SELECT a FROM t3), (SELECT a+1 FROM t2));
 ERROR 21000: Subquery returns more than 1 row
 replace into t1 (x, y) VALUES ((SELECT a FROM t2), (SELECT a+1 FROM t2));
@@ -798,13 +802,21 @@ SELECT * FROM t2 WHERE id IN (SELECT 5 UNION SELECT 2);
 id
 2
 INSERT INTO t2 VALUES ((SELECT * FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
 INSERT INTO t2 VALUES ((SELECT id FROM t2));
-ERROR HY000: Table 't2' is specified twice, both as a target for 'INSERT' and as a separate source for data
+ERROR 21000: Subquery returns more than 1 row
+select * from t2;
+id
+1
+2
+INSERT INTO t2 VALUES ((SELECT count(*) FROM t2));
+INSERT INTO t2 VALUES ((SELECT max(id) FROM t2));
 SELECT * FROM t2;
 id
 1
 2
+2
+2
 CREATE TABLE t1 (id int(11) default NULL, KEY id (id)) ENGINE=MyISAM CHARSET=latin1;
 INSERT INTO t1 values (1),(1);
 UPDATE t2 SET id=(SELECT * FROM t1);
diff --git a/mysql-test/main/view.result b/mysql-test/main/view.result
index 789245315ce..2c5ec3d4715 100644
--- a/mysql-test/main/view.result
+++ b/mysql-test/main/view.result
@@ -944,31 +944,19 @@ create view v1 as select * from t1;
 create view v2 as select * from v1;
 create view v3 as select v2.col1 from v2,t2 where v2.col1 = t2.col1;
 insert into v2 values ((select max(col1) from v1));
-ERROR HY000: The definition of table 'v1' prevents operation INSERT on table 'v2'
 insert into t1 values ((select max(col1) from v1));
-ERROR HY000: The definition of table 'v1' prevents operation INSERT on table 't1'
 insert into v2 values ((select max(col1) from v1));
-ERROR HY000: The definition of table 'v1' prevents operation INSERT on table 'v2'
 insert into v2 values ((select max(col1) from t1));
-ERROR HY000: The definition of table 'v2' prevents operation INSERT on table 'v2'
 insert into t1 values ((select max(col1) from t1));
-ERROR HY000: Table 't1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into v2 values ((select max(col1) from t1));
-ERROR HY000: The definition of table 'v2' prevents operation INSERT on table 'v2'
 insert into v2 values ((select max(col1) from v2));
-ERROR HY000: Table 'v2' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into t1 values ((select max(col1) from v2));
-ERROR HY000: The definition of table 'v2' prevents operation INSERT on table 't1'
 insert into v2 values ((select max(col1) from v2));
-ERROR HY000: Table 'v2' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into v3 (col1) values ((select max(col1) from v1));
-ERROR HY000: The definition of table 'v1' prevents operation INSERT on table 'v3'
 insert into v3 (col1) values ((select max(col1) from t1));
-ERROR HY000: The definition of table 'v3' prevents operation INSERT on table 'v3'
 insert into v3 (col1) values ((select max(col1) from v2));
-ERROR HY000: The definition of table 'v2' prevents operation INSERT on table 'v3'
-insert into v3 (col1) values ((select CONVERT_TZ('20050101000000','UTC','MET') from v2));
-ERROR HY000: The definition of table 'v2' prevents operation INSERT on table 'v3'
+insert into v3 (col1) values ((select CONVERT_TZ('20050101000000','UTC','MET') from v2 LIMIT 1));
+ERROR 22003: Out of range value for column 'col1' at row 2
 insert into v3 (col1) values ((select CONVERT_TZ('20050101000000','UTC','MET') from t2));
 insert into t3 values ((select CONVERT_TZ('20050101000000','UTC','MET') from t2));
 ERROR 23000: Column 'col1' cannot be null
@@ -978,6 +966,18 @@ insert into t1 (col1) values ((select max(col1) from v4));
 select * from t1;
 col1
 NULL
+NULL
+NULL
+NULL
+NULL
+NULL
+NULL
+NULL
+NULL
+NULL
+NULL
+NULL
+NULL
 1
 2
 3
@@ -1332,9 +1332,26 @@ create view v3 as select * from t1 where 20 < (select (s1) from v2);
 insert into v3 values (30);
 ERROR HY000: The target table v3 of the INSERT is not insertable-into
 create view v4 as select * from v2 where 20 < (select (s1) from t1);
+select * from t1;
+s1
 insert into v4 values (30);
-ERROR HY000: The target table v4 of the INSERT is not insertable-into
-drop view v4, v3, v2, v1;
+select * from t1;
+s1
+30
+create view v5 as select * from v2 where s1 < (select min(s1) from t1) WITH CHECK OPTION;
+# can't insert only less then minimum
+insert into v5 values (40);
+ERROR 44000: CHECK OPTION failed `test`.`v5`
+# allow insert the new minimum
+insert into v5 values (10);
+# always emply view (can't be something less than minimum)
+select * from v5;
+s1
+select * from t1;
+s1
+30
+10
+drop view v5, v4, v3, v2, v1;
 drop table t1;
 create table t1 (a int);
 create view v1 as select * from t1;
diff --git a/mysql-test/main/view.test b/mysql-test/main/view.test
index 51b89b4239b..3964aec4a97 100644
--- a/mysql-test/main/view.test
+++ b/mysql-test/main/view.test
@@ -866,33 +866,21 @@ create table t3 (col1 datetime not null);
 create view v1 as select * from t1;
 create view v2 as select * from v1;
 create view v3 as select v2.col1 from v2,t2 where v2.col1 = t2.col1;
--- error ER_VIEW_PREVENT_UPDATE
 insert into v2 values ((select max(col1) from v1));
--- error ER_VIEW_PREVENT_UPDATE
 insert into t1 values ((select max(col1) from v1));
--- error ER_VIEW_PREVENT_UPDATE
 insert into v2 values ((select max(col1) from v1));
--- error ER_VIEW_PREVENT_UPDATE
 insert into v2 values ((select max(col1) from t1));
--- error ER_UPDATE_TABLE_USED
 insert into t1 values ((select max(col1) from t1));
--- error ER_VIEW_PREVENT_UPDATE
 insert into v2 values ((select max(col1) from t1));
--- error ER_UPDATE_TABLE_USED
 insert into v2 values ((select max(col1) from v2));
--- error ER_VIEW_PREVENT_UPDATE
 insert into t1 values ((select max(col1) from v2));
--- error ER_UPDATE_TABLE_USED
 insert into v2 values ((select max(col1) from v2));
--- error ER_VIEW_PREVENT_UPDATE
 insert into v3 (col1) values ((select max(col1) from v1));
--- error ER_VIEW_PREVENT_UPDATE
 insert into v3 (col1) values ((select max(col1) from t1));
--- error ER_VIEW_PREVENT_UPDATE
 insert into v3 (col1) values ((select max(col1) from v2));
 # check with TZ tables in list
--- error ER_VIEW_PREVENT_UPDATE
-insert into v3 (col1) values ((select CONVERT_TZ('20050101000000','UTC','MET') from v2));
+--error ER_WARN_DATA_OUT_OF_RANGE
+insert into v3 (col1) values ((select CONVERT_TZ('20050101000000','UTC','MET') from v2 LIMIT 1));
 insert into v3 (col1) values ((select CONVERT_TZ('20050101000000','UTC','MET') from t2));
 -- error ER_BAD_NULL_ERROR
 insert into t3 values ((select CONVERT_TZ('20050101000000','UTC','MET') from t2));
@@ -1210,9 +1198,19 @@ create view v3 as select * from t1 where 20 < (select (s1) from v2);
 -- error ER_NON_INSERTABLE_TABLE
 insert into v3 values (30);
 create view v4 as select * from v2 where 20 < (select (s1) from t1);
--- error ER_NON_INSERTABLE_TABLE
+select * from t1;
 insert into v4 values (30);
-drop view v4, v3, v2, v1;
+select * from t1;
+create view v5 as select * from v2 where s1 < (select min(s1) from t1) WITH CHECK OPTION;
+--echo # can't insert only less then minimum
+--error ER_VIEW_CHECK_FAILED
+insert into v5 values (40);
+--echo # allow insert the new minimum
+insert into v5 values (10);
+--echo # always emply view (can't be something less than minimum)
+select * from v5;
+select * from t1;
+drop view v5, v4, v3, v2, v1;
 drop table t1;
 
 #
diff --git a/mysql-test/suite/sql_sequence/other.result b/mysql-test/suite/sql_sequence/other.result
index b950a7d8b13..247eb5b30a8 100644
--- a/mysql-test/suite/sql_sequence/other.result
+++ b/mysql-test/suite/sql_sequence/other.result
@@ -48,7 +48,6 @@ create sequence s2;
 insert into s1 (next_not_cached_value, minimum_value) values (100,1000);
 ERROR HY000: Field 'maximum_value' doesn't have a default value
 insert into s1 values (next value for s1, 1,9223372036854775806,1,1,1000,0,0);
-ERROR HY000: Table 's1' is specified twice, both as a target for 'INSERT' and as a separate source for data
 insert into s1 values(1000,9223372036854775806,1,1,1,1000,0,0);
 ERROR HY000: Sequence 'test.s1' has out of range value for options
 insert into s1 values(0,9223372036854775806,1,1,1,1000,0,0);
diff --git a/mysql-test/suite/sql_sequence/other.test b/mysql-test/suite/sql_sequence/other.test
index 9761e4268a8..f727f4856fb 100644
--- a/mysql-test/suite/sql_sequence/other.test
+++ b/mysql-test/suite/sql_sequence/other.test
@@ -38,7 +38,6 @@ create sequence s1;
 create sequence s2;
 --error ER_NO_DEFAULT_FOR_FIELD
 insert into s1 (next_not_cached_value, minimum_value) values (100,1000);
---error ER_UPDATE_TABLE_USED
 insert into s1 values (next value for s1, 1,9223372036854775806,1,1,1000,0,0);
 --error ER_SEQUENCE_INVALID_DATA
 insert into s1 values(1000,9223372036854775806,1,1,1,1000,0,0);
diff --git a/sql/item.h b/sql/item.h
index 3052f4c3219..bdc4732102c 100644
--- a/sql/item.h
+++ b/sql/item.h
@@ -757,6 +757,17 @@ class Item_const
   virtual const String *const_ptr_string() const { return NULL; }
 };
 
+struct subselect_table_finder_param
+{
+  THD *thd;
+  /*
+    We're searching for different TABLE_LIST objects referring to the same
+    table as this one
+  */
+  const TABLE_LIST *find;
+  /* NUL - not found, ERROR_TABLE - search error, or the found table reference */
+  TABLE_LIST *dup;
+};
 
 /****************************************************************************/
 
@@ -2292,6 +2303,7 @@ class Item :public Value_source,
     set_extraction_flag(*(int16*)arg);
     return 0;
   }
+  virtual bool subselect_table_finder_processor(void *arg) { return 0; };
 
   /* 
     TRUE if the expression depends only on the table indicated by tab_map
diff --git a/sql/item_subselect.cc b/sql/item_subselect.cc
index b66646617fc..56f7a12c89f 100644
--- a/sql/item_subselect.cc
+++ b/sql/item_subselect.cc
@@ -7147,3 +7147,27 @@ void Subq_materialization_tracker::report_partial_merge_keys(
   for (uint i= 0; i < merge_keys_count; i++)
     partial_match_array_sizes[i]= merge_keys[i]->get_key_buff_elements();
 }
+
+
+/*
+  Check if somewhere inside this subselect we read the table. This means a
+  full read "(SELECT ... FROM tbl)", outside reference to tbl.column does not
+  count
+*/
+
+bool
+Item_subselect::subselect_table_finder_processor(void *arg)
+{
+  subselect_table_finder_param *param= (subselect_table_finder_param *)arg;
+  for (SELECT_LEX *sl= unit->first_select(); sl; sl= sl->next_select())
+  {
+    TABLE_LIST *dup;
+    if ((dup= sl->find_table(param->thd, &param->find->db,
+                             &param->find->table_name)))
+    {
+      param->dup= dup;
+      return TRUE;
+    }
+  }
+  return FALSE;
+};
diff --git a/sql/item_subselect.h b/sql/item_subselect.h
index bf7e484303b..e6e8d4b6271 100644
--- a/sql/item_subselect.h
+++ b/sql/item_subselect.h
@@ -273,6 +273,7 @@ class Item_subselect :public Item_result_field,
   {
     return TRUE;
   }
+  bool subselect_table_finder_processor(void *arg) override;
 
   void register_as_with_rec_ref(With_element *with_elem);
   void init_expr_cache_tracker(THD *thd);
diff --git a/sql/sql_base.cc b/sql/sql_base.cc
index 2162afb17e5..a2d357d4456 100644
--- a/sql/sql_base.cc
+++ b/sql/sql_base.cc
@@ -19,6 +19,7 @@
 
 #include "mariadb.h"
 #include "sql_base.h"                           // setup_table_map
+#include "sql_list.h"
 #include "sql_priv.h"
 #include "unireg.h"
 #include "debug_sync.h"
@@ -1173,7 +1174,6 @@ TABLE_LIST* find_dup_table(THD *thd, TABLE_LIST *table, TABLE_LIST *table_list,
   t_name= &table->table_name;
   t_alias= &table->alias;
 
-retry:
   DBUG_PRINT("info", ("real table: %s.%s", d_name->str, t_name->str));
   for (TABLE_LIST *tl= table_list; tl ; tl= tl->next_global, res= 0)
   {
@@ -1235,28 +1235,53 @@ TABLE_LIST* find_dup_table(THD *thd, TABLE_LIST *table, TABLE_LIST *table_list,
     DBUG_PRINT("info",
                ("found same copy of table or table which we should skip"));
   }
-  if (res && res->belong_to_derived)
-  {
-    /*
-      We come here for queries of type:
-      INSERT INTO t1 (SELECT tmp.a FROM (select * FROM t1) as tmp);
+  DBUG_RETURN(res);
+}
 
-      Try to fix by materializing the derived table
-    */
-    TABLE_LIST *derived=  res->belong_to_derived;
-    if (derived->is_merged_derived() && !derived->derived->is_excluded())
+
+TABLE_LIST* unique_table_in_select_list(THD *thd, TABLE_LIST *table, SELECT_LEX *sel)
+{
+  subselect_table_finder_param param= {thd, table, NULL};
+  List_iterator_fast<Item> it(sel->item_list);
+  Item *item;
+  while ((item= it++))
+  {
+    if (item->walk(&Item::subselect_table_finder_processor, FALSE, &param))
     {
-      DBUG_PRINT("info",
-                 ("convert merged to materialization to resolve the conflict"));
-      derived->change_refs_to_fields();
-      derived->set_materialized_derived();
-      goto retry;
+      if (param.dup == NULL)
+        return ERROR_TABLE;
+      return param.dup;
     }
+    DBUG_ASSERT(param.dup == NULL);
   }
-  DBUG_RETURN(res);
+  return NULL;
+}
+
+
+typedef TABLE_LIST* (*find_table_callback)(THD *thd, TABLE_LIST *table,
+                                           TABLE_LIST *table_list,
+                                           uint check_flag, SELECT_LEX *sel);
+
+static
+TABLE_LIST*
+find_table(THD *thd, TABLE_LIST *table, TABLE_LIST *table_list,
+           uint check_flag, SELECT_LEX *sel, find_table_callback callback );
+
+TABLE_LIST* unique_table_callback(THD *thd, TABLE_LIST *table,
+                                  TABLE_LIST *table_list,
+                                  uint check_flag, SELECT_LEX *sel)
+{
+  return find_dup_table(thd, table, table_list, check_flag);
 }
 
 
+TABLE_LIST* unique_in_sel_table_callback(THD *thd, TABLE_LIST *table,
+                                         TABLE_LIST *table_list,
+                                         uint check_flag, SELECT_LEX *sel)
+{
+  return unique_table_in_select_list(thd, table, sel);
+}
+
 /**
   Test that the subject table of INSERT/UPDATE/DELETE/CREATE
   or (in case of MyISAMMRG) one of its children are not used later
@@ -1275,6 +1300,25 @@ TABLE_LIST* find_dup_table(THD *thd, TABLE_LIST *table, TABLE_LIST *table_list,
 TABLE_LIST*
 unique_table(THD *thd, TABLE_LIST *table, TABLE_LIST *table_list,
              uint check_flag)
+{
+  return find_table(thd, table, table_list, check_flag, NULL,
+                    &unique_table_callback);
+}
+
+
+TABLE_LIST*
+unique_table_in_insert_returning_subselect(THD *thd, TABLE_LIST *table, SELECT_LEX *sel)
+{
+  return find_table(thd, table, NULL, 0, sel,
+                    &unique_in_sel_table_callback);
+
+}
+
+
+static
+TABLE_LIST*
+find_table(THD *thd, TABLE_LIST *table, TABLE_LIST *table_list,
+           uint check_flag, SELECT_LEX *sel, find_table_callback callback )
 {
   TABLE_LIST *dup;
 
@@ -1306,12 +1350,12 @@ unique_table(THD *thd, TABLE_LIST *table, TABLE_LIST *table_list,
       if (!tmp_parent)
         break;
 
-      if ((dup= find_dup_table(thd, child, child->next_global, check_flag)))
+      if ((dup= (*callback)(thd, child, child->next_global, check_flag, sel)))
         break;
     }
   }
   else
-    dup= find_dup_table(thd, table, table_list, check_flag);
+    dup= (*callback)(thd, table, table_list, check_flag, sel);
   return dup;
 }
 
diff --git a/sql/sql_base.h b/sql/sql_base.h
index efcdd79a3cb..914e7ac44cc 100644
--- a/sql/sql_base.h
+++ b/sql/sql_base.h
@@ -296,6 +296,8 @@ bool open_and_lock_internal_tables(TABLE *table, bool lock);
 bool lock_tables(THD *thd, TABLE_LIST *tables, uint counter, uint flags);
 int decide_logging_format(THD *thd, TABLE_LIST *tables);
 void close_thread_table(THD *thd, TABLE **table_ptr);
+TABLE_LIST*
+unique_table_in_insert_returning_subselect(THD *thd, TABLE_LIST *table, SELECT_LEX *sel);
 TABLE_LIST *unique_table(THD *thd, TABLE_LIST *table, TABLE_LIST *table_list,
                          uint check_flag);
 bool is_equal(const LEX_CSTRING *a, const LEX_CSTRING *b);
diff --git a/sql/sql_insert.cc b/sql/sql_insert.cc
index 03558240ba0..e6f0eadef2a 100644
--- a/sql/sql_insert.cc
+++ b/sql/sql_insert.cc
@@ -57,6 +57,7 @@
 */
 
 #include "mariadb.h"                 /* NO_EMBEDDED_ACCESS_CHECKS */
+#include "sql_list.h"
 #include "sql_priv.h"
 #include "sql_insert.h"
 #include "sql_update.h"                         // compare_record
@@ -728,6 +729,8 @@ bool mysql_insert(THD *thd, TABLE_LIST *table_list,
   Name_resolution_context_state ctx_state;
   SELECT_LEX *returning= thd->lex->has_returning() ? thd->lex->returning() : 0;
   unsigned char *readbuff= NULL;
+  List<List_item> insert_values_cache;
+  bool cache_insert_values= FALSE;
 
 #ifndef EMBEDDED_LIBRARY
   char *query= thd->query();
@@ -785,7 +788,7 @@ bool mysql_insert(THD *thd, TABLE_LIST *table_list,
 
   if ((res= mysql_prepare_insert(thd, table_list, fields, values,
                                  update_fields, update_values, duplic, ignore,
-                                 &unused_conds, FALSE)))
+                                 &unused_conds, FALSE, &cache_insert_values)))
   {
     retval= thd->is_error();
     if (res < 0)
@@ -1033,8 +1036,42 @@ bool mysql_insert(THD *thd, TABLE_LIST *table_list,
   if (returning)
     fix_rownum_pointers(thd, thd->lex->returning(), &info.accepted_rows);
 
+
+  if (cache_insert_values)
+  {
+    insert_values_cache.empty();
+    while ((values= its++))
+    {
+      List<Item> *caches= new (thd->mem_root) List_item;
+      List_iterator_fast<Item> iv(*values);
+      Item *item;
+      if (caches == 0)
+      {
+        error= 1;
+        goto values_loop_end;
+      }
+      caches->empty();
+      while((item= iv++))
+      {
+        Item_cache *cache= item->get_cache(thd);
+        if (!cache)
+        {
+          error= 1;
+          goto values_loop_end;
+        }
+        cache->setup(thd, item);
+        caches->push_back(cache);
+      }
+      insert_values_cache.push_back(caches);
+    }
+    its.rewind();
+  }
+
   do
   {
+    List_iterator_fast<List_item> itc(insert_values_cache);
+    List_iterator_fast<List_item> *itr;
+
     DBUG_PRINT("info", ("iteration %llu", iteration));
     if (iteration && bulk_parameters_set(thd))
     {
@@ -1042,7 +1079,24 @@ bool mysql_insert(THD *thd, TABLE_LIST *table_list,
       goto values_loop_end;
     }
 
-    while ((values= its++))
+    if (cache_insert_values)
+    {
+      List_item *caches;
+      while ((caches= itc++))
+      {
+        List_iterator_fast<Item> ic(*caches);
+        Item_cache *cache;
+        while((cache= (Item_cache*) ic++))
+        {
+          cache->cache_value();
+        }
+      }
+      itc.rewind();
+      itr= &itc;
+    }
+    else
+      itr= &its;
+    while ((values= (*itr)++))
     {
       thd->get_stmt_da()->inc_current_row_for_warning();
       if (fields.elements || !value_count)
@@ -1146,7 +1200,7 @@ bool mysql_insert(THD *thd, TABLE_LIST *table_list,
         break;
       info.accepted_rows++;
     }
-    its.rewind();
+    itr->rewind();
     iteration++;
   } while (bulk_parameters_iterations(thd));
 
@@ -1657,6 +1711,7 @@ static void prepare_for_positional_update(TABLE *table, TABLE_LIST *tables)
     table_list          Global/local table list
     where               Where clause (for insert ... select)
     select_insert       TRUE if INSERT ... SELECT statement
+    cache_insert_values insert's VALUES(...) has to be pre-computed
 
   TODO (in far future)
     In cases of:
@@ -1679,7 +1734,7 @@ int mysql_prepare_insert(THD *thd, TABLE_LIST *table_list,
                          List<Item> &update_fields, List<Item> &update_values,
                          enum_duplicates duplic, bool ignore,
                          COND **where,
-                         bool select_insert)
+                         bool select_insert, bool * const cache_insert_values)
 {
   SELECT_LEX *select_lex= thd->lex->first_select_lex();
   Name_resolution_context *context= &select_lex->context;
@@ -1783,6 +1838,15 @@ int mysql_prepare_insert(THD *thd, TABLE_LIST *table_list,
       thd->vers_insert_history(row_start); // check privileges
   }
 
+  /*
+    Check if we read from the same table we're inserting into.
+    Queries like INSERT INTO t1 VALUES ((SELECT ... FROM t1...)) have
+    to pre-compute the VALUES part.
+    Reading from the same table in the RETURNING clause is not allowed.
+
+    INSERT...SELECT detects this case in select_insert::prepare and also
+    uses buffering to handle it correcly.
+  */
   if (!select_insert)
   {
     Item *fake_conds= 0;
@@ -1790,10 +1854,30 @@ int mysql_prepare_insert(THD *thd, TABLE_LIST *table_list,
     if ((duplicate= unique_table(thd, table_list, table_list->next_global,
                                  CHECK_DUP_ALLOW_DIFFERENT_ALIAS)))
     {
-      update_non_unique_table_error(table_list, "INSERT", duplicate);
-      DBUG_RETURN(1);
+      /*
+        This is INSERT INTO ... VALUES (...) and it must pre-compute the
+        values to be inserted.
+      */
+      (*cache_insert_values)= true;
     }
+    else
+      (*cache_insert_values)= false;
+
     select_lex->fix_prepare_information(thd, &fake_conds, &fake_conds);
+
+    if ((*cache_insert_values) && thd->lex->has_returning())
+    {
+      // Check if the table we're inserting into is also in RETURNING clause
+      TABLE_LIST *dup=
+         unique_table_in_insert_returning_subselect(thd, table_list,
+                                                    thd->lex->returning());
+      if (dup)
+      {
+        if (dup != ERROR_TABLE)
+          update_non_unique_table_error(table_list, "INSERT", duplicate);
+        DBUG_RETURN(1);
+      }
+    }
   }
   /*
     Only call prepare_for_posistion() if we are not performing a DELAYED
@@ -3930,6 +4014,7 @@ int mysql_insert_select_prepare(THD *thd, select_result *sel_res)
   int res;
   LEX *lex= thd->lex;
   SELECT_LEX *select_lex= lex->first_select_lex();
+  bool cache_insert_values= false;
   DBUG_ENTER("mysql_insert_select_prepare");
 
   /*
@@ -3940,7 +4025,7 @@ int mysql_insert_select_prepare(THD *thd, select_result *sel_res)
   if ((res= mysql_prepare_insert(thd, lex->query_tables, lex->field_list, 0,
                                  lex->update_list, lex->value_list,
                                  lex->duplicates, lex->ignore,
-                                 &select_lex->where, TRUE)))
+                                 &select_lex->where, TRUE, &cache_insert_values)))
     DBUG_RETURN(res);
 
   /*
diff --git a/sql/sql_insert.h b/sql/sql_insert.h
index 2080761a0dc..176c861cfad 100644
--- a/sql/sql_insert.h
+++ b/sql/sql_insert.h
@@ -28,7 +28,7 @@ int mysql_prepare_insert(THD *thd, TABLE_LIST *table_list,
                          List<Item> &update_fields,
                          List<Item> &update_values, enum_duplicates duplic,
                          bool ignore,
-                         COND **where, bool select_insert);
+                         COND **where, bool select_insert, bool * const cache_results);
 bool mysql_insert(THD *thd,TABLE_LIST *table,List<Item> &fields,
                   List<List_item> &values, List<Item> &update_fields,
                   List<Item> &update_values, enum_duplicates flag,
diff --git a/sql/sql_lex.cc b/sql/sql_lex.cc
index f3d51db028d..6027f6a0fcf 100644
--- a/sql/sql_lex.cc
+++ b/sql/sql_lex.cc
@@ -12266,3 +12266,45 @@ bool SELECT_LEX_UNIT::is_derived_eliminated() const
     return true;
   return derived->table->map & outer_select()->join->eliminated_tables;
 }
+
+/**
+  Find the real table in prepared SELECT tree
+
+  NOTE: all SELECT must be prepared (to have leaf table list).
+
+  NOTE: it looks only for real tables (not view or derived)
+
+  @param thd          the current thread handle
+  @param db_name      name of db of the table to look for
+  @param db_name      name of db of the table to look for
+
+  @return first found table, NULL or ERROR_TABLE
+*/
+
+TABLE_LIST *SELECT_LEX::find_table(THD *thd,
+                                   const LEX_CSTRING *db_name,
+                                   const LEX_CSTRING *table_name)
+{
+  uchar buff[STACK_BUFF_ALLOC];                 // Max argument in function
+  if (check_stack_overrun(thd, STACK_MIN_SIZE, buff))
+    return NULL;
+
+  List_iterator_fast <TABLE_LIST> ti(leaf_tables);
+  TABLE_LIST *table;
+  while ((table= ti++))
+  {
+    if (cmp(&table->db, db_name) == 0 &&
+        cmp(&table->table_name, table_name) == 0)
+      return table;
+  }
+
+  for (SELECT_LEX_UNIT *u= first_inner_unit(); u; u= u->next_unit())
+  {
+    for (st_select_lex *sl= u->first_select(); sl; sl=sl->next_select())
+    {
+      if ((table= sl->find_table(thd, db_name, table_name)))
+        return table;
+    }
+  }
+  return NULL;
+}
diff --git a/sql/sql_lex.h b/sql/sql_lex.h
index 6312102e076..221db9d53f9 100644
--- a/sql/sql_lex.h
+++ b/sql/sql_lex.h
@@ -1690,6 +1690,10 @@ class st_select_lex: public st_select_lex_node
   void lex_start(LEX *plex);
   bool is_unit_nest() { return (nest_flags & UNIT_NEST_FL); }
   void mark_as_unit_nest() { nest_flags= UNIT_NEST_FL; }
+
+  TABLE_LIST *find_table(THD *thd,
+                         const LEX_CSTRING *db_name,
+                         const LEX_CSTRING *table_name);
 };
 typedef class st_select_lex SELECT_LEX;
 
diff --git a/sql/sql_prepare.cc b/sql/sql_prepare.cc
index a9cf923cc15..0d306b6597c 100644
--- a/sql/sql_prepare.cc
+++ b/sql/sql_prepare.cc
@@ -1304,7 +1304,19 @@ static bool mysql_test_insert_common(Prepared_statement *stmt,
   THD *thd= stmt->thd;
   List_iterator_fast<List_item> its(values_list);
   List_item *values;
-  DBUG_ENTER("mysql_test_insert_common");
+  bool cache_results= FALSE;
+  DBUG_ENTER("mysql_test_insert");
+
+  /*
+    Since INSERT DELAYED doesn't support temporary tables, we could
+    not pre-open temporary tables for SQLCOM_INSERT / SQLCOM_REPLACE.
+    Open them here instead.
+  */
+  if (table_list->lock_type != TL_WRITE_DELAYED)
+  {
+    if (thd->open_temporary_tables(table_list))
+      goto error;
+  }
 
   if (insert_precheck(thd, table_list))
     goto error;
@@ -1336,7 +1348,8 @@ static bool mysql_test_insert_common(Prepared_statement *stmt,
 
     if (mysql_prepare_insert(thd, table_list, fields, values, update_fields,
                              update_values, duplic, ignore,
-                             &unused_conds, FALSE))
+                             &unused_conds, FALSE,
+                             &cache_results))
       goto error;
 
     value_count= values->elements;
diff --git a/sql/table.h b/sql/table.h
index cd1a9a378a4..1395650aae6 100644
--- a/sql/table.h
+++ b/sql/table.h
@@ -3078,6 +3078,8 @@ struct TABLE_LIST
   ulonglong m_table_ref_version;
 };
 
+#define ERROR_TABLE  ((TABLE_LIST*) 0x1)
+
 class Item;
 
 /*
diff --git a/tests/mysql_client_test.c b/tests/mysql_client_test.c
index 5e8ec0701ff..e53b00ffecc 100644
--- a/tests/mysql_client_test.c
+++ b/tests/mysql_client_test.c
@@ -22629,6 +22629,164 @@ static void test_mdev_34958()
   rc= mysql_query(mysql, "DROP TABLE t1, t2");
   myquery(rc);
 }
+
+/* Server crash when inserting from derived table containing insert target table */
+static void test_mdev_32086()
+{
+  int        rc;
+  MYSQL_STMT *stmt_insert;
+  MYSQL_BIND bind[2];
+  MYSQL_RES *result;
+  MYSQL_ROW row;
+  unsigned int vals[] = { 123, 124};
+  unsigned int vals_array_len = 2;
+  const char *insert_stmt= "\
+insert into t1 values(\
+  (select 101+count(*)\
+   from\
+   (\
+      select dt2.id\
+      from (select id from t1) dt2, t1 t where t.id=dt2.id\
+   ) dt\
+   where dt.id<1000\
+  ), ?\
+)";
+
+  /* Set up test's environment */
+
+
+  rc= mysql_query(mysql, "create table t1 (pk int, id int);");
+  myquery(rc);
+
+  rc= mysql_query(mysql, "insert into t1 values (2,2), (3,3), (4,4);");
+  myquery(rc);
+
+  stmt_insert = mysql_stmt_init(mysql);
+  if (!stmt_insert)
+  {
+    fprintf(stderr, "mysql_stmt_init failed: Error: %s\n",
+            mysql_error(mysql));
+    exit(1);
+  }
+
+  rc= mysql_stmt_prepare(stmt_insert, insert_stmt, strlen(insert_stmt));
+  if (rc)
+  {
+    fprintf(stderr, "mysql_stmt_prepare failed: %s\n",
+            mysql_stmt_error(stmt_insert));
+    exit(1);
+  }
+
+  memset(&bind[0], 0, sizeof(MYSQL_BIND));
+
+  bind[0].buffer_type= MYSQL_TYPE_LONG;
+  bind[0].buffer= vals;
+
+  rc= mysql_stmt_attr_set(stmt_insert, STMT_ATTR_ARRAY_SIZE, &vals_array_len);
+  if (rc)
+  {
+    fprintf(stderr, "mysql_stmt_prepare failed: %s\n",
+            mysql_stmt_error(stmt_insert));
+    exit(1);
+  }
+
+  rc= mysql_stmt_bind_param(stmt_insert, bind);
+  if (rc)
+  {
+    fprintf(stderr, "mysql_stmt_bind_param failed: %s\n",
+            mysql_stmt_error(stmt_insert));
+    exit(1);
+  }
+
+  rc= mysql_stmt_execute(stmt_insert);
+  if (rc)
+  {
+    fprintf(stderr, "mysql_stmt_execute failed: %s\n",
+            mysql_stmt_error(stmt_insert));
+    exit(1);
+  }
+
+  /*
+    pk	id
+    2	2
+    3	3
+    4	4
+    104	123
+    104	124
+   */
+  rc= mysql_query(mysql, "select * from t1");
+  if (rc)
+  {
+    fprintf(stderr, "Query failed: %s\n", mysql_error(mysql));
+  }
+  result= mysql_store_result(mysql);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(atoi(row[0]) == 2 && atoi(row[1]) == 2);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(atoi(row[0]) == 3 && atoi(row[1]) == 3);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(atoi(row[0]) == 4 && atoi(row[1]) == 4);
+  row= mysql_fetch_row(result);
+  printf("\n %d, %d \n", atoi(row[0]), atoi(row[1]));
+  DIE_UNLESS(atoi(row[0]) == 104 && atoi(row[1]) == 123);
+  row= mysql_fetch_row(result);
+  printf("\n %d, %d \n", atoi(row[0]), atoi(row[1]));
+  DIE_UNLESS(atoi(row[0]) == 104 && atoi(row[1]) == 124);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(row == NULL);
+
+  mysql_free_result(result);
+
+  rc= mysql_stmt_execute(stmt_insert);
+  if (rc)
+  {
+    fprintf(stderr, "mysql_stmt_execute failed: %s\n",
+            mysql_stmt_error(stmt_insert));
+    exit(1);
+  }
+  /*
+    pk	id
+    2	2
+    3	3
+    4	4
+    104	123
+    104	124
+    106	123
+    106	124
+   */
+  rc= mysql_query(mysql, "select * from t1");
+  if (rc)
+  {
+    fprintf(stderr, "Query failed: %s\n", mysql_error(mysql));
+  }
+  result= mysql_store_result(mysql);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(atoi(row[0]) == 2 && atoi(row[1]) == 2);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(atoi(row[0]) == 3 && atoi(row[1]) == 3);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(atoi(row[0]) == 4 && atoi(row[1]) == 4);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(atoi(row[0]) == 104 && atoi(row[1]) == 123);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(atoi(row[0]) == 104 && atoi(row[1]) == 124);
+  row= mysql_fetch_row(result);
+  printf("\n %d, %d \n", atoi(row[0]), atoi(row[1]));
+  DIE_UNLESS(atoi(row[0]) == 106 && atoi(row[1]) == 123);
+  row= mysql_fetch_row(result);
+  printf("\n %d, %d \n", atoi(row[0]), atoi(row[1]));
+  DIE_UNLESS(atoi(row[0]) == 106 && atoi(row[1]) == 124);
+  row= mysql_fetch_row(result);
+  DIE_UNLESS(row == NULL);
+
+  mysql_free_result(result);
+
+  mysql_stmt_close(stmt_insert);
+
+  /* Clean up */
+  rc= mysql_query(mysql, "DROP TABLE t1");
+  myquery(rc);
+}
 #endif // EMBEDDED_LIBRARY
 
 /*
@@ -23204,6 +23362,7 @@ static struct my_tests_st my_tests[]= {
   { "test_mdev_34718_bd", test_mdev_34718_bd },
   { "test_mdev_34718_ad", test_mdev_34718_ad },
   { "test_mdev_34958", test_mdev_34958 },
+  { "test_mdev_32086", test_mdev_32086 },
 #endif
   { "test_mdev_10075", test_mdev_10075},
   { 0, 0 }
-- 
2.43.0
From 3b4de4c281cb3e33e6d3ee9537e542bf0a84b83e Mon Sep 17 00:00:00 2001
From: Sergei Petrunia <sergey@mariadb.com>
Date: Mon, 24 Mar 2025 13:07:36 +0200
Subject: [PATCH] MDEV-32084: Assertion in best_extension_by_limited_search()
 ...

When subquery with LEFT JOIN is converted into semi-join, it is possible
to construct cases where the LEFT JOIN's ON expression refers to a table
in the current select but not in the current join nest. For example:

  t1 SEMI JOIN (
    t2
    LEFT JOIN (t3 LEFT JOIN t4 ON t4.col=t1.col) ON expr
  )

here, ON t4.col=t1.col" has this property. Let's denote it as
ON-EXPR-HAS-REF-OUTSIDE-NEST.

The optimizer handles LEFT JOINs like so:
- Outer join runtime requires that "inner tables follow outer" in
  any join order.
- Join optimizer enforces this by constructing join orders that follow
  table dependencies as they are specified in TABLE_LIST::dep_tables.
- The dep_tables are set in simplify_joins() according to the contents
  of ON expressions and LEFT JOIN structure.

However, the logic in simplify_joins() failed to account for possible
ON-EXPR-HAS-REF-OUTSIDE-NEST. It assumed that references outside of the
current join nest could only be OUTER_REF_TABLE_BIT or RAND_TABLE_BIT.

The fix was to add the missing logic.
---
 mysql-test/main/join_nested.result      | 12 +++++
 mysql-test/main/join_nested.test        | 13 ++++++
 mysql-test/main/join_nested_jcl6.result | 12 +++++
 sql/sql_select.cc                       | 58 +++++++++++++++++++++++--
 4 files changed, 91 insertions(+), 4 deletions(-)

diff --git a/mysql-test/main/join_nested.result b/mysql-test/main/join_nested.result
index cb9dffc837daf..564685188bfbe 100644
--- a/mysql-test/main/join_nested.result
+++ b/mysql-test/main/join_nested.result
@@ -2051,3 +2051,15 @@ a	b	c	a	a	b
 DROP TABLE t1, t2, t3;
 set join_cache_level= @save_join_cache_level;
 # end of 10.3 tests
+#
+# MDEV-32084: Assertion in best_extension_by_limited_search(), or crash elsewhere in release
+#
+CREATE TABLE t1 (i int);
+INSERT INTO t1 values (1),(2);
+SELECT 1 FROM  t1 WHERE i IN
+(SELECT 1 FROM t1 c
+LEFT JOIN  (t1 a LEFT JOIN t1 b ON t1.i = b.i)  ON c.i = t1.i);
+1
+1
+DROP TABLE t1;
+# end of 10.11 tests
diff --git a/mysql-test/main/join_nested.test b/mysql-test/main/join_nested.test
index ed1fe4c9f7e44..62370b952620c 100644
--- a/mysql-test/main/join_nested.test
+++ b/mysql-test/main/join_nested.test
@@ -1458,3 +1458,16 @@ DROP TABLE t1, t2, t3;
 set join_cache_level= @save_join_cache_level;
 
 --echo # end of 10.3 tests
+
+--echo #
+--echo # MDEV-32084: Assertion in best_extension_by_limited_search(), or crash elsewhere in release
+--echo #
+CREATE TABLE t1 (i int);
+INSERT INTO t1 values (1),(2);
+
+SELECT 1 FROM  t1 WHERE i IN
+  (SELECT 1 FROM t1 c
+    LEFT JOIN  (t1 a LEFT JOIN t1 b ON t1.i = b.i)  ON c.i = t1.i);
+
+DROP TABLE t1;
+--echo # end of 10.11 tests
diff --git a/mysql-test/main/join_nested_jcl6.result b/mysql-test/main/join_nested_jcl6.result
index 0bda8d43a6917..50a1e83a5ab68 100644
--- a/mysql-test/main/join_nested_jcl6.result
+++ b/mysql-test/main/join_nested_jcl6.result
@@ -2060,6 +2060,18 @@ a	b	c	a	a	b
 DROP TABLE t1, t2, t3;
 set join_cache_level= @save_join_cache_level;
 # end of 10.3 tests
+#
+# MDEV-32084: Assertion in best_extension_by_limited_search(), or crash elsewhere in release
+#
+CREATE TABLE t1 (i int);
+INSERT INTO t1 values (1),(2);
+SELECT 1 FROM  t1 WHERE i IN
+(SELECT 1 FROM t1 c
+LEFT JOIN  (t1 a LEFT JOIN t1 b ON t1.i = b.i)  ON c.i = t1.i);
+1
+1
+DROP TABLE t1;
+# end of 10.11 tests
 CREATE TABLE t5 (a int, b int, c int, PRIMARY KEY(a), KEY b_i (b));
 CREATE TABLE t6 (a int, b int, c int, PRIMARY KEY(a), KEY b_i (b));
 CREATE TABLE t7 (a int, b int, c int, PRIMARY KEY(a), KEY b_i (b));
diff --git a/sql/sql_select.cc b/sql/sql_select.cc
index 3c4b7b3ec03eb..85d654002242f 100644
--- a/sql/sql_select.cc
+++ b/sql/sql_select.cc
@@ -18628,6 +18628,8 @@ simplify_joins(JOIN *join, List<TABLE_LIST> *join_list, COND *conds, bool top,
         prev_table->dep_tables|= used_tables;
       if (prev_table->on_expr)
       {
+        /* If the ON expression is still there, it's an outer join */
+        DBUG_ASSERT(prev_table->outer_join);
         prev_table->dep_tables|= table->on_expr_dep_tables;
         table_map prev_used_tables= prev_table->nested_join ?
 	                            prev_table->nested_join->used_tables :
@@ -18642,11 +18644,59 @@ simplify_joins(JOIN *join, List<TABLE_LIST> *join_list, COND *conds, bool top,
           prevents update of inner table dependences.
           For example it might happen if RAND() function
           is used in JOIN ON clause.
-	*/  
-        if (!((prev_table->on_expr->used_tables() &
-               ~(OUTER_REF_TABLE_BIT | RAND_TABLE_BIT)) &
-              ~prev_used_tables))
+	*/
+        table_map prev_on_expr_deps= prev_table->on_expr->used_tables() &
+                                     ~(OUTER_REF_TABLE_BIT | RAND_TABLE_BIT);
+        prev_on_expr_deps&= ~prev_used_tables;
+
+        if (!prev_on_expr_deps)
           prev_table->dep_tables|= used_tables;
+        else
+        {
+          /*
+            Another possible case is when prev_on_expr_deps!=0 but it depends
+            on a table outside this join nest. SQL name resolution don't allow
+            this but it is possible when LEFT JOIN is inside a subquery which
+            is converted into a semi-join nest, Example:
+
+              t1 SEMI JOIN (
+                t2
+                LEFT JOIN (t3 LEFT JOIN t4 ON t4.col=t1.col) ON expr
+              ) ON ...
+
+            here, we would have prev_table=t4, table=t3.  The condition
+            "ON t4.col=t1.col" depends on tables {t1, t4}. To make sure the
+            optimizer puts t3 before t4 we need to make sure t4.dep_tables
+            includes t3.
+          */
+
+          DBUG_ASSERT(table->embedding == prev_table->embedding);
+          if (table->embedding)
+          {
+            /*
+              Find what are the "peers" of "table" in the join nest. Normally,
+              it is table->embedding->nested_join->used_tables, but here we are
+              in the process of recomputing that value.
+              So, we walk the join list and collect the bitmap of peers:
+            */
+            table_map peers= 0;
+            List_iterator_fast<TABLE_LIST> li(*join_list);
+            TABLE_LIST *peer;
+            while ((peer= li++))
+            {
+              table_map curmap= peer->nested_join
+                                    ? peer->nested_join->used_tables
+                                    : peer->get_map();
+              peers|= curmap;
+            }
+            /*
+              If prev_table doesn't depend on any of its peers, add a
+              dependency on nearest peer, that is, on 'table'.
+            */
+            if (!(prev_on_expr_deps & peers))
+              prev_table->dep_tables|= used_tables;
+          }
+        }
       }
     }
     prev_table= table;
