From db986e4782e9f6cc42a0e50151dc4fe43641b337 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Sat, 9 Aug 2025 08:28:23 -0400
Subject: [PATCH] 
 https://github.com/ImageMagick/ImageMagick/security/advisories/GHSA-qp29-wxp5-wh82

---
 coders/png.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/coders/png.c b/coders/png.c
index f7ae779b2fe..f6ea0bbde8d 100644
--- a/coders/png.c
+++ b/coders/png.c
@@ -6404,19 +6404,19 @@ static Image *ReadOneMNGImage(MngReadInfo* mng_info,
               mng_info->magn_methy = 1;
             if (mng_info->magn_methx == 1)
               {
-                magnified_width=mng_info->magn_ml;
+                magnified_width=(size_t) mng_info->magn_ml;
 
                 if (image->columns > 1)
                    magnified_width += mng_info->magn_mr;
 
                 if (image->columns > 2)
-                   magnified_width += (png_uint_32)
+                   magnified_width += (size_t)
                       ((image->columns-2)*(mng_info->magn_mx));
               }
 
             else
               {
-                magnified_width=(png_uint_32) image->columns;
+                magnified_width=(size_t) image->columns;
 
                 if (image->columns > 1)
                    magnified_width += mng_info->magn_ml-1;
@@ -6425,25 +6425,25 @@ static Image *ReadOneMNGImage(MngReadInfo* mng_info,
                    magnified_width += mng_info->magn_mr-1;
 
                 if (image->columns > 3)
-                   magnified_width += (png_uint_32)
+                   magnified_width += (size_t)
                       ((image->columns-3)*(mng_info->magn_mx-1));
               }
 
             if (mng_info->magn_methy == 1)
               {
-                magnified_height=mng_info->magn_mt;
+                magnified_height=(size_t) mng_info->magn_mt;
 
                 if (image->rows > 1)
                    magnified_height += mng_info->magn_mb;
 
                 if (image->rows > 2)
-                   magnified_height += (png_uint_32)
+                   magnified_height += (size_t)
                       ((image->rows-2)*(mng_info->magn_my));
               }
 
             else
               {
-                magnified_height=(png_uint_32) image->rows;
+                magnified_height=(size_t) image->rows;
 
                 if (image->rows > 1)
                    magnified_height += mng_info->magn_mt-1;
@@ -6452,7 +6452,7 @@ static Image *ReadOneMNGImage(MngReadInfo* mng_info,
                    magnified_height += mng_info->magn_mb-1;
 
                 if (image->rows > 3)
-                   magnified_height += (png_uint_32)
+                   magnified_height += (size_t)
                       ((image->rows-3)*(mng_info->magn_my-1));
               }
 From: Dirk Lemstra <dirk@lemstra.org>
Date: Fri, 2 May 2025 18:33:17 +0200
Subject: [PATCH] Added extra checks to make sure we don't get stuck in the
  while loop.

origin: https://github.com/ImageMagick/ImageMagick/commit/229fa96a988a21d78318bbca61245a6ed1ee33a0
bug: https://github.com/ImageMagick/ImageMagick/security/advisories/GHSA-vmhh-8rxq-fp9g
bug-debian-security: https://security-tracker.debian.org/tracker/CVE-2025-53015
bug-debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1109339
---
 MagickCore/image-private.h |  1 +
 MagickCore/profile.c       | 11 +++++++++++
 2 files changed, 12 insertions(+)

diff --git a/MagickCore/image-private.h b/MagickCore/image-private.h
index 4ce71c3..11dca10 100644
--- a/MagickCore/image-private.h
+++ b/MagickCore/image-private.h
@@ -52,6 +52,7 @@ extern "C" {
 #define MAGICK_SIZE_MAX  (SIZE_MAX)
 #define MAGICK_SSIZE_MAX  (SSIZE_MAX)
 #define MAGICK_SSIZE_MIN  (-SSIZE_MAX-1)
+#define MAGICK_ULONG_MAX  (ULONG_MAX)
 #define MatteColor  "#bdbdbd"  /* gray */
 #define MatteColorRGBA  ScaleShortToQuantum(0xbdbd),\
   ScaleShortToQuantum(0xbdbd),ScaleShortToQuantum(0xbdbd),OpaqueAlpha
diff --git a/MagickCore/profile.c b/MagickCore/profile.c
index 7eea1d3..85c1801 100644
--- a/MagickCore/profile.c
+++ b/MagickCore/profile.c
@@ -2571,6 +2571,17 @@ static void GetXmpNumeratorAndDenominator(double value,
   *denominator=1;
   if (value <= MagickEpsilon)
     return;
+  if (value > (double) MAGICK_ULONG_MAX)
+    {
+      *numerator = MAGICK_ULONG_MAX;
+      *denominator = 1;
+      return;
+    }
+  if (floor(value) == value)
+    {
+      *numerator = (unsigned long) value;
+      *denominator = 1;
+    }
   *numerator=1;
   df=1.0;
   while(fabs(df - value) > MagickEpsilon)
From: Dirk Lemstra <dirk@lemstra.org>
Date: Mon, 12 May 2025 22:23:48 +0200
Subject: Added missing return.

origin: https://github.com/ImageMagick/ImageMagick/commit/38631605e6ab744548a561797472cf8648bcfe26
bug: https://github.com/ImageMagick/ImageMagick/security/advisories/GHSA-vmhh-8rxq-fp9g
bug-debian-security: https://security-tracker.debian.org/tracker/CVE-2025-53015
bug-debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1109339
---
 MagickCore/profile.c | 1 +
 1 file changed, 1 insertion(+)

Index: imagemagick-7.1.1.43+dfsg1/MagickCore/profile.c
===================================================================
--- imagemagick-7.1.1.43+dfsg1.orig/MagickCore/profile.c
+++ imagemagick-7.1.1.43+dfsg1/MagickCore/profile.c
@@ -2581,6 +2581,7 @@ static void GetXmpNumeratorAndDenominato
     {
       *numerator = (unsigned long) value;
       *denominator = 1;
+      return;
     }
   *numerator=1;
   df=1.0;
